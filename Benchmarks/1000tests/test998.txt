INPUTS {
	var_1 fl64 : (-1.0, 1.0);
	var_2 fl64 : (-1.0, 1.0);
	var_3 fl64 : (-1.0, 1.0);
	var_4 fl64 : (-1.0, 1.0);
	var_5 fl64 : (-1.0, 1.0);
	var_6 fl64 : (-1.0, 1.0);
	var_7 fl64 : (-1.0, 1.0);
	var_8 fl64 : (-1.0, 1.0);
	var_9 fl64 : (-1.0, 1.0);
	var_10 fl64 : (-1.0, 1.0);
	var_11 fl64 : (-1.0, 1.0);
	var_12 fl64 : (-1.0, 1.0);
	var_13 fl64 : (-1.0, 1.0);
	var_14 fl64 : (-1.0, 1.0);
	var_15 fl64 : (-1.0, 1.0);
	var_16 fl64 : (-1.0, 1.0);
	var_17 fl64 : (-1.0, 1.0);
	var_18 fl64 : (-1.0, 1.0);
}
OUTPUTS {
	comp_3; 
}
EXPRS {
	tmp_12781 rnd64 = var_1 * (-1.9161e-323);
	tmp_12782 rnd64 = (-1.8250e-313) * var_2 + ((-1.2678e-319) / (1.0e-15 + (var_3 - var_4 / (1.0e-15 + (var_5 / (1.0e-15 + var_6))))));
	tmp_12783 rnd64 = var_7 / (1.0e-15 + var_8);
	tmp_12784 rnd64 = 1.7720e174;
	comp_1 rnd64 = tmp_12784 / (1.0e-15 + tmp_12783 + tmp_12782 + tmp_12781 * ((-1.0702e-306) / (1.0e-15 + ((-1.3632e183) / (1.0e-15 + 1.5113e305 + ((-1.8206e-306) + (var_9 / (1.0e-15 + (var_10 / (1.0e-15 + sin(var_11 + 1.1285e305)))))))))));
	tmp_12785 rnd64 = (var_12 * (-1.8260e-232));
	comp_2 rnd64 = comp_1 / (1.0e-15 + tmp_12785 / (1.0e-15 + sqrt(var_13 / (1.0e-15 + 0.0 * (-1.0612e-74) * 1.0538e-319 + (1.1359e-322 + (var_14 * 1.1462e-306 * (var_15 + (var_16 + 0.0))))))));
	comp_3 rnd64 = comp_2 / (1.0e-15 + (var_17 - ((-1.8936e-323) * 1.8358e-307 / (1.0e-15 + 1.2613e228 / (1.0e-15 + (-1.2181e-241) - (-1.4817e-310) / (1.0e-15 + (1.9075e-307 + (var_18 + 1.5465e-211))))))));
}