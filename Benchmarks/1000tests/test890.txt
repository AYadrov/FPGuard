INPUTS {
	var_1 fl64 : (-1.0, 1.0);
	var_2 fl64 : (-1.0, 1.0);
	var_3 fl64 : (-1.0, 1.0);
	var_4 fl64 : (-1.0, 1.0);
	var_5 fl64 : (-1.0, 1.0);
	var_6 fl64 : (-1.0, 1.0);
	var_7 fl64 : (-1.0, 1.0);
	var_8 fl64 : (-1.0, 1.0);
	var_9 fl64 : (-1.0, 1.0);
	var_10 fl64 : (-1.0, 1.0);
	var_11 fl64 : (-1.0, 1.0);
	var_12 fl64 : (-1.0, 1.0);
	var_13 fl64 : (-1.0, 1.0);
	var_14 fl64 : (-1.0, 1.0);
	var_15 fl64 : (-1.0, 1.0);
	var_16 fl64 : (-1.0, 1.0);
	var_17 fl64 : (-1.0, 1.0);
	var_18 fl64 : (-1.0, 1.0);
	var_19 fl64 : (-1.0, 1.0);
	var_20 fl64 : (-1.0, 1.0);
	var_21 fl64 : (-1.0, 1.0);
	var_22 fl64 : (-1.0, 1.0);
	var_23 fl64 : (-1.0, 1.0);
}
OUTPUTS {
	comp_6; 
}
EXPRS {
	comp_1 rnd64 = 1.5985e-306 / (1.0e-15 + sqrt((var_1 - (-1.4279e-105) * ((-1.3168e-307) + var_2 - (-1.9958e-306)))));
	tmp_11322 rnd64 = 0.0;
	comp_2 rnd64 = comp_1 - tmp_11322 * var_3 / (1.0e-15 + (0.0 * 1.3609e-306 - 1.0505e-316 + var_4 - 1.0540e-307 * (var_5 + (-1.8653e262))));
	comp_3 rnd64 = comp_2 + ((-1.6790e-311) * 0.0 * (var_6 + (var_7 - (var_8 - var_9 + var_10))));
	comp_4 rnd64 = comp_3 * (var_11 / (1.0e-15 + (var_12 / (1.0e-15 + (var_13 + (-1.1579e-311))))));
	tmp_11323 rnd64 = 0.0;
	tmp_11324 rnd64 = -1.0442e-321;
	comp_5 rnd64 = comp_4 - tmp_11324 / (1.0e-15 + tmp_11323 * (var_14 * var_15 - 0.0 - var_16));
	comp_6 rnd64 = comp_5 / (1.0e-15 + var_17 + sin((var_18 / (1.0e-15 + 1.3553e-306 / (1.0e-15 + tan((0.0 * (var_19 / (1.0e-15 + (-1.5177e306) * var_20 / (1.0e-15 + (var_21 - (var_22 / (1.0e-15 + (var_23 - 1.7893e-306))))))))))))));
}