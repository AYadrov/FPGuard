INPUTS {
	var_1 fl32 : (-1.0, 1.0);
	var_2 fl32 : (-1.0, 1.0);
	var_3 fl32 : (-1.0, 1.0);
	var_4 fl32 : (-1.0, 1.0);
	var_5 fl32 : (-1.0, 1.0);
	var_6 fl32 : (-1.0, 1.0);
	var_7 fl32 : (-1.0, 1.0);
	var_8 fl32 : (-1.0, 1.0);
	var_9 fl32 : (-1.0, 1.0);
	var_10 fl32 : (-1.0, 1.0);
	var_11 fl32 : (-1.0, 1.0);
	var_12 fl32 : (-1.0, 1.0);
	var_13 fl32 : (-1.0, 1.0);
	var_14 fl32 : (-1.0, 1.0);
	var_15 fl32 : (-1.0, 1.0);
	var_16 fl32 : (-1.0, 1.0);
	var_17 fl32 : (-1.0, 1.0);
	var_18 fl32 : (-1.0, 1.0);
	var_19 fl32 : (-1.0, 1.0);
	var_20 fl32 : (-1.0, 1.0);
	var_21 fl32 : (-1.0, 1.0);
}
OUTPUTS {
	comp_6; 
}
EXPRS {
	comp_1 rnd32 = 0.0 + var_1 - var_2 * var_3 * (-1.4638e-35);
	tmp_3103 rnd32 = 1.0897e19 + (var_4 - var_5 + (1.8597e-35 / (1.0e-15 + var_6 / (1.0e-15 + var_7 + (var_8 / (1.0e-15 + (-1.0096e-29)))))));
	comp_2 rnd32 = comp_1 + tmp_3103 / (1.0e-15 + 0.0 - 0.0 * 1.0505e21 * ((-1.4441e36) + (-1.6267e-36) * var_9 - (0.0 / (1.0e-15 + (0.0 + var_10)))));
	comp_3 rnd32 = comp_2 - (var_11 + var_12 - (var_13 * 1.9264e35 * (var_14 + 1.5101e36 + (1.3281e-35 / (1.0e-15 + var_15 + var_16)))));
	tmp_3104 rnd32 = 0.0 - var_17;
	comp_4 rnd32 = comp_3 - tmp_3104 / (1.0e-15 + ((-1.6578e34) - var_18));
	tmp_3105 rnd32 = ((-1.9060e35) + (-1.1370e34));
	comp_5 rnd32 = comp_4 * tmp_3105 * (1.5333e-41 + 1.8194e-41);
	comp_6 rnd32 = comp_5 / (1.0e-15 + cos(var_19 * exp(((-1.1412e-44) + 1.1009e-41 - var_20 / (1.0e-15 + var_21 * 1.2925e-3)))));
}