INPUTS {
	var_1 fl32 : (-1.0, 1.0);
	var_2 fl32 : (-1.0, 1.0);
	var_3 fl32 : (-1.0, 1.0);
	var_4 fl32 : (-1.0, 1.0);
	var_5 fl32 : (-1.0, 1.0);
	var_6 fl32 : (-1.0, 1.0);
	var_7 fl32 : (-1.0, 1.0);
	var_8 fl32 : (-1.0, 1.0);
	var_9 fl32 : (-1.0, 1.0);
	var_10 fl32 : (-1.0, 1.0);
	var_11 fl32 : (-1.0, 1.0);
	var_12 fl32 : (-1.0, 1.0);
	var_13 fl32 : (-1.0, 1.0);
	var_14 fl32 : (-1.0, 1.0);
	var_15 fl32 : (-1.0, 1.0);
	var_16 fl32 : (-1.0, 1.0);
	var_17 fl32 : (-1.0, 1.0);
	var_18 fl32 : (-1.0, 1.0);
	var_19 fl32 : (-1.0, 1.0);
	var_20 fl32 : (-1.0, 1.0);
	var_21 fl32 : (-1.0, 1.0);
	var_22 fl32 : (-1.0, 1.0);
	var_23 fl32 : (-1.0, 1.0);
	var_24 fl32 : (-1.0, 1.0);
	var_25 fl32 : (-1.0, 1.0);
	var_26 fl32 : (-1.0, 1.0);
	var_27 fl32 : (-1.0, 1.0);
}
OUTPUTS {
	comp_8; 
}
EXPRS {
	comp_1 rnd32 = var_1 * cos((1.0006e-35 / (1.0e-15 + var_2 / (1.0e-15 + (-1.1789e35) * cos(-1.8473e-37)))));
	tmp_442 rnd32 = (0.0 + var_3);
	comp_2 rnd32 = comp_1 + tmp_442 * var_4 - (var_5 * (-1.5773e-18) - (var_6 * (-1.2544e34) + (var_7 - 1.3394e19 / (1.0e-15 + (var_8 * (var_9 + var_10))))));
	comp_3 rnd32 = comp_2 * var_11 + (var_12 * ((-1.5546e34) + var_13 + 1.6139e-42));
	comp_4 rnd32 = comp_3 - var_14 + (-1.0693e-36) + (var_15 * (-1.0646e35) / (1.0e-15 + sin(1.0427e11 - 1.4085e-35 - (var_16 + (0.0 / (1.0e-15 + 1.8936e-43 / (1.0e-15 + (-1.1533e11) + 1.0989e-35)))))));
	comp_5 rnd32 = comp_4 * exp((-1.4593e-7) - ((-1.6334e-41) - 1.6912e29 - var_17 / (1.0e-15 + var_18)));
	tmp_443 rnd32 = 1.3174e-11;
	comp_6 rnd32 = comp_5 * tmp_443 - (var_19 - (-1.7336e-36));
	comp_7 rnd32 = comp_6 * var_20 / (1.0e-15 + ((-1.9008e35) + var_21 / (1.0e-15 + (0.0 * (-1.8667e35)))));
	comp_8 rnd32 = comp_7 * (1.3959e36 - (var_22 + var_23 + (1.7153e35 + (var_24 - 0.0 * var_25 * var_26 * var_27))));
}