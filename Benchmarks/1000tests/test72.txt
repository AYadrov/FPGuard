INPUTS {
	var_1 fl32 : (-1.0, 1.0);
	var_2 fl32 : (-1.0, 1.0);
	var_3 fl32 : (-1.0, 1.0);
	var_4 fl32 : (-1.0, 1.0);
	var_5 fl32 : (-1.0, 1.0);
	var_6 fl32 : (-1.0, 1.0);
	var_7 fl32 : (-1.0, 1.0);
	var_8 fl32 : (-1.0, 1.0);
	var_9 fl32 : (-1.0, 1.0);
	var_10 fl32 : (-1.0, 1.0);
	var_11 fl32 : (-1.0, 1.0);
	var_12 fl32 : (-1.0, 1.0);
	var_13 fl32 : (-1.0, 1.0);
	var_14 fl32 : (-1.0, 1.0);
	var_15 fl32 : (-1.0, 1.0);
	var_16 fl32 : (-1.0, 1.0);
	var_17 fl32 : (-1.0, 1.0);
	var_18 fl32 : (-1.0, 1.0);
	var_19 fl32 : (-1.0, 1.0);
	var_20 fl32 : (-1.0, 1.0);
	var_21 fl32 : (-1.0, 1.0);
	var_22 fl32 : (-1.0, 1.0);
	var_23 fl32 : (-1.0, 1.0);
	var_24 fl32 : (-1.0, 1.0);
	var_25 fl32 : (-1.0, 1.0);
	var_26 fl32 : (-1.0, 1.0);
	var_27 fl32 : (-1.0, 1.0);
}
OUTPUTS {
	comp_7; 
}
EXPRS {
	tmp_887 rnd32 = -1.9955e-41;
	comp_1 rnd32 = tmp_887 * var_1 * (var_2 - var_3 - var_4 - 1.2249e-41 * var_5 * (var_6 * var_7 / (1.0e-15 + 0.0)));
	comp_2 rnd32 = comp_1 / (1.0e-15 + var_8 + 1.6291e20 - ((-1.8677e-37) - var_9 - 1.1259e35));
	comp_3 rnd32 = comp_2 / (1.0e-15 + var_10 * var_11 + ((-1.2581e-43) * (-1.8661e-35)));
	comp_4 rnd32 = comp_3 / (1.0e-15 + (var_12 / (1.0e-15 + (var_13 - var_14 / (1.0e-15 + (1.5830e34 / (1.0e-15 + 1.0442e35 - var_15 - var_16 / (1.0e-15 + 1.3442e-35 * (-1.5229e-35)))))))));
	comp_5 rnd32 = comp_4 / (1.0e-15 + var_17 - (var_18 - (0.0 - (var_19 - var_20))));
	tmp_888 rnd32 = 0.0;
	tmp_889 rnd32 = 1.9082e34;
	comp_6 rnd32 = comp_5 * tmp_889 / (1.0e-15 + tmp_888 + (-1.3098e-44) / (1.0e-15 + var_21 / (1.0e-15 + (1.9834e-35 + 0.0 * var_22 + (-1.4387e36) + var_23))));
	comp_7 rnd32 = comp_6 * (1.4567e-41 + sqrt(sin(var_24 - (var_25 + (var_26 + (1.3509e35 + var_27 + (-1.2434e-22)))))));
}