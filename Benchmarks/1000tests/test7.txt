INPUTS {
	var_1 fl64 : (-1.0, 1.0);
	var_2 fl64 : (-1.0, 1.0);
	var_3 fl64 : (-1.0, 1.0);
	var_4 fl64 : (-1.0, 1.0);
	var_5 fl64 : (-1.0, 1.0);
	var_6 fl64 : (-1.0, 1.0);
	var_7 fl64 : (-1.0, 1.0);
	var_8 fl64 : (-1.0, 1.0);
	var_9 fl64 : (-1.0, 1.0);
	var_10 fl64 : (-1.0, 1.0);
	var_11 fl64 : (-1.0, 1.0);
	var_12 fl64 : (-1.0, 1.0);
	var_13 fl64 : (-1.0, 1.0);
	var_14 fl64 : (-1.0, 1.0);
	var_15 fl64 : (-1.0, 1.0);
	var_16 fl64 : (-1.0, 1.0);
	var_17 fl64 : (-1.0, 1.0);
}
OUTPUTS {
	comp_6; 
}
EXPRS {
	comp_1 rnd64 = (0.0 * var_1 + (var_2 / (1.0e-15 + (1.0008e-307 + (-1.1104e-320) - (-1.4440e-311) / (1.0e-15 + var_3)))));
	comp_2 rnd64 = comp_1 + var_4 * (var_5 - var_6);
	comp_3 rnd64 = comp_2 * (1.6154e305 - (var_7 / (1.0e-15 + (1.9110e305 - 1.4092e305 * var_8))));
	comp_4 rnd64 = comp_3 / (1.0e-15 + 1.3803e-307 - tan((var_9 / (1.0e-15 + (1.0057e-322 / (1.0e-15 + var_10 - var_11))))));
	comp_5 rnd64 = comp_4 / (1.0e-15 + var_12 - (-1.9629e-307) * (-1.3958e-96) + ((-1.9145e252) * (var_13 * var_14 / (1.0e-15 + 1.6606e306 + var_15 / (1.0e-15 + (-1.4719e-307) * var_16)))));
	tmp_77 rnd64 = 0.0;
	comp_6 rnd64 = comp_5 * tmp_77 - (0.0 / (1.0e-15 + (-1.2449e-317) * ((-1.9954e306) * (-1.2393e-322) - var_17)));
}