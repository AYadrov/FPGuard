INPUTS {
	var_1 fl64 : (-1.0, 1.0);
	var_2 fl64 : (-1.0, 1.0);
	var_3 fl64 : (-1.0, 1.0);
	var_4 fl64 : (-1.0, 1.0);
	var_5 fl64 : (-1.0, 1.0);
	var_6 fl64 : (-1.0, 1.0);
	var_7 fl64 : (-1.0, 1.0);
	var_8 fl64 : (-1.0, 1.0);
	var_9 fl64 : (-1.0, 1.0);
	var_10 fl64 : (-1.0, 1.0);
	var_11 fl64 : (-1.0, 1.0);
	var_12 fl64 : (-1.0, 1.0);
	var_13 fl64 : (-1.0, 1.0);
	var_14 fl64 : (-1.0, 1.0);
	var_15 fl64 : (-1.0, 1.0);
	var_16 fl64 : (-1.0, 1.0);
	var_17 fl64 : (-1.0, 1.0);
	var_18 fl64 : (-1.0, 1.0);
}
OUTPUTS {
	comp_5; 
}
EXPRS {
	tmp_4378 rnd64 = (0.0 + (-1.9003e-307) * (-1.5754e-306) * (1.3815e53 * var_1 + var_2 + (-1.7473e-315) + 1.9064e-176 * (-1.1333e-320)));
	comp_1 rnd64 = tmp_4378 / (1.0e-15 + (var_3 / (1.0e-15 + (var_4 / (1.0e-15 + 1.5077e-306 - ((-1.1380e306) * (1.8240e226 / (1.0e-15 + sqrt((var_5 * (var_6 - var_7)))))))))));
	tmp_4379 rnd64 = (1.4614e305 * (1.5920e-318 - (var_8 * (var_9 / (1.0e-15 + var_10)))));
	comp_2 rnd64 = comp_1 * tmp_4379 - 0.0 - (var_11 * (-1.4678e306) * (-1.6582e306) + (-1.5819e63) + (-1.6500e-317) + (1.5148e305 * var_12 + (0.0 - (-1.3858e306))));
	comp_3 rnd64 = comp_2 / (1.0e-15 + ((-1.4767e-307) + ((-1.3611e-306) - (-1.9168e-306) + (0.0 - (var_13 - (-1.2973e-307))))));
	comp_4 rnd64 = comp_3 * (var_14 / (1.0e-15 + (0.0 + 0.0)));
	comp_5 rnd64 = comp_4 + 1.3328e306 - (var_15 / (1.0e-15 + (var_16 - var_17 - var_18)));
}