INPUTS {
	var_1 fl64 : (-1.0, 1.0);
	var_2 fl64 : (-1.0, 1.0);
	var_3 fl64 : (-1.0, 1.0);
	var_4 fl64 : (-1.0, 1.0);
	var_5 fl64 : (-1.0, 1.0);
	var_6 fl64 : (-1.0, 1.0);
	var_7 fl64 : (-1.0, 1.0);
	var_8 fl64 : (-1.0, 1.0);
	var_9 fl64 : (-1.0, 1.0);
	var_10 fl64 : (-1.0, 1.0);
	var_11 fl64 : (-1.0, 1.0);
	var_12 fl64 : (-1.0, 1.0);
	var_13 fl64 : (-1.0, 1.0);
	var_14 fl64 : (-1.0, 1.0);
	var_15 fl64 : (-1.0, 1.0);
	var_16 fl64 : (-1.0, 1.0);
	var_17 fl64 : (-1.0, 1.0);
}
OUTPUTS {
	comp_4; 
}
EXPRS {
	comp_1 rnd64 = (0.0 + ((-1.6211e266) / (1.0e-15 + var_1 / (1.0e-15 + (var_2 + (-1.7663e-247) / (1.0e-15 + var_3 / (1.0e-15 + var_4)))))));
	tmp_10604 rnd64 = ((-1.0798e305) * 0.0 + (1.7853e305 - (var_5 + (var_6 - var_7))));
	comp_2 rnd64 = comp_1 + tmp_10604 + ((-1.8234e306) + ((-1.5714e-306) + var_8 - 0.0));
	tmp_10605 rnd64 = 0.0 / (1.0e-15 + var_9 + var_10 - tan((1.9427e-307 + (var_11 + 1.3500e-319 + 0.0 + (-1.3278e-306) - tan((-1.1886e-314) + var_12 - (-1.2591e107) * (var_13 / (1.0e-15 + (0.0 / (1.0e-15 + ((-1.1924e305) - (var_14 * var_15)))))))))));
	comp_3 rnd64 = comp_2 * tmp_10605 + ((-1.6519e305) / (1.0e-15 + (var_16 + var_17)));
	tmp_10606 rnd64 = 1.4643e305;
	tmp_10607 rnd64 = -1.7749e-307;
	tmp_10608 rnd64 = 1.1196e-323;
	comp_4 rnd64 = comp_3 / (1.0e-15 + tmp_10608 - tmp_10607 - tmp_10606 * 1.2724e305 + 1.1875e305);
}