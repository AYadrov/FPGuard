INPUTS {
	var_1 fl64 : (-1.0, 1.0);
	var_2 fl64 : (-1.0, 1.0);
	var_3 fl64 : (-1.0, 1.0);
	var_4 fl64 : (-1.0, 1.0);
	var_5 fl64 : (-1.0, 1.0);
	var_6 fl64 : (-1.0, 1.0);
	var_7 fl64 : (-1.0, 1.0);
	var_8 fl64 : (-1.0, 1.0);
	var_9 fl64 : (-1.0, 1.0);
	var_10 fl64 : (-1.0, 1.0);
	var_11 fl64 : (-1.0, 1.0);
	var_12 fl64 : (-1.0, 1.0);
	var_13 fl64 : (-1.0, 1.0);
	var_14 fl64 : (-1.0, 1.0);
	var_15 fl64 : (-1.0, 1.0);
	var_16 fl64 : (-1.0, 1.0);
	var_17 fl64 : (-1.0, 1.0);
	var_18 fl64 : (-1.0, 1.0);
	var_19 fl64 : (-1.0, 1.0);
	var_20 fl64 : (-1.0, 1.0);
	var_21 fl64 : (-1.0, 1.0);
	var_22 fl64 : (-1.0, 1.0);
	var_23 fl64 : (-1.0, 1.0);
	var_24 fl64 : (-1.0, 1.0);
}
OUTPUTS {
	comp_4; 
}
EXPRS {
	comp_1 rnd64 = 1.4467e306 / (1.0e-15 + var_1 + exp(1.5689e-318 + (-1.6442e-307) + (0.0 * exp((var_2 * (-1.9634e-127))))));
	tmp_11540 rnd64 = (1.4527e-306 + 1.5729e-22 - (1.3877e105 * (-1.4717e-311) / (1.0e-15 + var_3 - (-1.6393e-19) / (1.0e-15 + 0.0 / (1.0e-15 + sqrt(var_4 / (1.0e-15 + var_5 + var_6 / (1.0e-15 + 0.0))))))));
	comp_2 rnd64 = comp_1 - tmp_11540 / (1.0e-15 + var_7 * (var_8 * tan(var_9 + (var_10 - var_11 * var_12))));
	tmp_11541 rnd64 = 0.0;
	tmp_11542 rnd64 = 1.9658e142;
	comp_3 rnd64 = comp_2 / (1.0e-15 + tmp_11542 * tmp_11541 - var_13 + ((-1.6980e306) + 0.0));
	tmp_11543 rnd64 = (1.9644e-314 + (var_14 + (var_15 / (1.0e-15 + 0.0 * ((-1.6539e-215) - (var_16 + (var_17 / (1.0e-15 + 1.3468e305 * (var_18 - var_19)))))))));
	comp_4 rnd64 = comp_3 / (1.0e-15 + tmp_11543 / (1.0e-15 + var_20 * (var_21 + (1.6752e306 / (1.0e-15 + var_22 - (var_23 * var_24))))));
}