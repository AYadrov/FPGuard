INPUTS {
	var_1 fl64 : (-1.0, 1.0);
	var_2 fl64 : (-1.0, 1.0);
	var_3 fl64 : (-1.0, 1.0);
	var_4 fl64 : (-1.0, 1.0);
	var_5 fl64 : (-1.0, 1.0);
	var_6 fl64 : (-1.0, 1.0);
	var_7 fl64 : (-1.0, 1.0);
	var_8 fl64 : (-1.0, 1.0);
	var_9 fl64 : (-1.0, 1.0);
	var_10 fl64 : (-1.0, 1.0);
	var_11 fl64 : (-1.0, 1.0);
	var_12 fl64 : (-1.0, 1.0);
	var_13 fl64 : (-1.0, 1.0);
	var_14 fl64 : (-1.0, 1.0);
	var_15 fl64 : (-1.0, 1.0);
	var_16 fl64 : (-1.0, 1.0);
	var_17 fl64 : (-1.0, 1.0);
	var_18 fl64 : (-1.0, 1.0);
	var_19 fl64 : (-1.0, 1.0);
	var_20 fl64 : (-1.0, 1.0);
}
OUTPUTS {
	comp_5; 
}
EXPRS {
	tmp_4839 rnd64 = 1.6415e-307;
	tmp_4840 rnd64 = -1.3773e-312;
	comp_1 rnd64 = tmp_4840 - tmp_4839 / (1.0e-15 + (1.8075e-201 + 1.1638e280 - 1.8098e306 - (var_1 / (1.0e-15 + var_2 * var_3 * (var_4 / (1.0e-15 + 1.6392e305 + var_5 + 1.1366e45))))));
	comp_2 rnd64 = comp_1 + var_6 * (1.4635e-307 - 0.0 - var_7 * 0.0 * (var_8 / (1.0e-15 + exp(1.0580e-318))));
	comp_3 rnd64 = comp_2 - cos(((-1.7479e-306) + (var_9 - (0.0 / (1.0e-15 + (1.4873e-306 - ((-1.0289e306) - 0.0 / (1.0e-15 + (var_10 / (1.0e-15 + var_11 / (1.0e-15 + (-1.3228e-307) + var_12)))))))))));
	tmp_4841 rnd64 = tan(-1.0646e4);
	tmp_4842 rnd64 = -1.2439e226;
	comp_4 rnd64 = comp_3 * tmp_4842 * tmp_4841 + (var_13 + 0.0 * 0.0 * ((-1.6549e-306) * var_14 - (var_15 / (1.0e-15 + ((-1.7609e-307) * (var_16 / (1.0e-15 + 0.0)))))));
	comp_5 rnd64 = comp_4 + (var_17 / (1.0e-15 + 0.0 / (1.0e-15 + var_18 / (1.0e-15 + 1.1873e-150 / (1.0e-15 + var_19 * (var_20 - (-1.8526e52)))))));
}