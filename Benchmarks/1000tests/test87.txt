INPUTS {
	var_1 fl64 : (-1.0, 1.0);
	var_2 fl64 : (-1.0, 1.0);
	var_3 fl64 : (-1.0, 1.0);
	var_4 fl64 : (-1.0, 1.0);
	var_5 fl64 : (-1.0, 1.0);
	var_6 fl64 : (-1.0, 1.0);
	var_7 fl64 : (-1.0, 1.0);
	var_8 fl64 : (-1.0, 1.0);
	var_9 fl64 : (-1.0, 1.0);
	var_10 fl64 : (-1.0, 1.0);
	var_11 fl64 : (-1.0, 1.0);
	var_12 fl64 : (-1.0, 1.0);
	var_13 fl64 : (-1.0, 1.0);
	var_14 fl64 : (-1.0, 1.0);
	var_15 fl64 : (-1.0, 1.0);
	var_16 fl64 : (-1.0, 1.0);
	var_17 fl64 : (-1.0, 1.0);
	var_18 fl64 : (-1.0, 1.0);
	var_19 fl64 : (-1.0, 1.0);
	var_20 fl64 : (-1.0, 1.0);
	var_21 fl64 : (-1.0, 1.0);
}
OUTPUTS {
	comp_3; 
}
EXPRS {
	tmp_1053 rnd64 = (var_1 / (1.0e-15 + 1.8987e306 - (var_2 / (1.0e-15 + var_3 + var_4))));
	tmp_1054 rnd64 = 0.0;
	comp_1 rnd64 = tmp_1054 * tmp_1053 / (1.0e-15 + var_5 + var_6 * (-1.7192e-306));
	tmp_1055 rnd64 = -1.4406e-29;
	tmp_1056 rnd64 = 1.4002e-148;
	comp_2 rnd64 = comp_1 * tmp_1056 - tmp_1055 / (1.0e-15 + (var_7 / (1.0e-15 + (var_8 / (1.0e-15 + (var_9 * 1.1261e168 - tan(var_10 / (1.0e-15 + ((-1.6803e-306) + var_11 * 1.1029e-318 - 1.8585e305 / (1.0e-15 + 1.6885e-307 - var_12 / (1.0e-15 + 1.5528e-310)))))))))));
	tmp_1057 rnd64 = var_13 + tan((var_14 * var_15 * (var_16 - (var_17 - (1.4901e-306 / (1.0e-15 + (-1.2593e238)))))));
	tmp_1058 rnd64 = 1.8108e-316;
	tmp_1059 rnd64 = (0.0 * var_18);
	comp_3 rnd64 = comp_2 + tmp_1059 - tmp_1058 * tmp_1057 + 1.4218e306 / (1.0e-15 + 0.0 / (1.0e-15 + (-1.4779e-306) * sin((var_19 * (var_20 / (1.0e-15 + var_21))))));
}