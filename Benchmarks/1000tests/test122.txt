INPUTS {
	var_1 fl64 : (-1.0, 1.0);
	var_2 fl64 : (-1.0, 1.0);
	var_3 fl64 : (-1.0, 1.0);
	var_4 fl64 : (-1.0, 1.0);
	var_5 fl64 : (-1.0, 1.0);
	var_6 fl64 : (-1.0, 1.0);
	var_7 fl64 : (-1.0, 1.0);
	var_8 fl64 : (-1.0, 1.0);
	var_9 fl64 : (-1.0, 1.0);
	var_10 fl64 : (-1.0, 1.0);
	var_11 fl64 : (-1.0, 1.0);
	var_12 fl64 : (-1.0, 1.0);
	var_13 fl64 : (-1.0, 1.0);
	var_14 fl64 : (-1.0, 1.0);
	var_15 fl64 : (-1.0, 1.0);
	var_16 fl64 : (-1.0, 1.0);
	var_17 fl64 : (-1.0, 1.0);
	var_18 fl64 : (-1.0, 1.0);
	var_19 fl64 : (-1.0, 1.0);
}
OUTPUTS {
	comp_3; 
}
EXPRS {
	tmp_1508 rnd64 = var_1 + (var_2 + ((-1.3623e-306) * (var_3 + var_4 - var_5 + var_6)));
	comp_1 rnd64 = tmp_1508 * (1.6538e-306 + var_7 * (1.7687e-176 + 0.0 - (var_8 / (1.0e-15 + var_9 - var_10 + 1.4312e-310 - var_11))));
	tmp_1509 rnd64 = 0.0;
	comp_2 rnd64 = comp_1 * tmp_1509 * (var_12 - var_13 + ((-1.0782e-321) / (1.0e-15 + 1.5204e305 - var_14 * var_15 + 1.8345e-313)));
	tmp_1510 rnd64 = 1.2076e305;
	tmp_1511 rnd64 = -1.9429e-322;
	comp_3 rnd64 = comp_2 + tmp_1511 * tmp_1510 / (1.0e-15 + var_16 + (0.0 - (var_17 / (1.0e-15 + (-1.4825e-105) + 1.2756e306 + (var_18 * 1.8980e306 / (1.0e-15 + var_19))))));
}