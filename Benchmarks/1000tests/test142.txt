INPUTS {
	var_1 fl64 : (-1.0, 1.0);
	var_2 fl64 : (-1.0, 1.0);
	var_3 fl64 : (-1.0, 1.0);
	var_4 fl64 : (-1.0, 1.0);
	var_5 fl64 : (-1.0, 1.0);
	var_6 fl64 : (-1.0, 1.0);
	var_7 fl64 : (-1.0, 1.0);
	var_8 fl64 : (-1.0, 1.0);
	var_9 fl64 : (-1.0, 1.0);
	var_10 fl64 : (-1.0, 1.0);
	var_11 fl64 : (-1.0, 1.0);
	var_12 fl64 : (-1.0, 1.0);
	var_13 fl64 : (-1.0, 1.0);
	var_14 fl64 : (-1.0, 1.0);
	var_15 fl64 : (-1.0, 1.0);
	var_16 fl64 : (-1.0, 1.0);
	var_17 fl64 : (-1.0, 1.0);
	var_18 fl64 : (-1.0, 1.0);
}
OUTPUTS {
	comp_5; 
}
EXPRS {
	comp_1 rnd64 = (1.2754e-306 * var_1 - (var_2 + 1.3343e-81));
	comp_2 rnd64 = comp_1 * (var_3 * var_4 + (-1.5025e306) / (1.0e-15 + (-1.0158e-317) + var_5 / (1.0e-15 + (-1.2056e305) * (-1.3580e305) - var_6 / (1.0e-15 + var_7 + var_8))));
	comp_3 rnd64 = comp_2 / (1.0e-15 + (var_9 + var_10 * ((-1.0279e306) / (1.0e-15 + var_11 + ((-1.8001e-276) * 1.8877e225 * (var_12 + 1.5101e-306))))));
	tmp_1774 rnd64 = -1.0399e-307;
	comp_4 rnd64 = comp_3 + tmp_1774 * var_13 + (1.6254e-306 + 1.6579e-306 * (0.0 / (1.0e-15 + 1.2664e-321 / (1.0e-15 + cos((var_14 + 0.0 + 1.8026e-312))))));
	comp_5 rnd64 = comp_4 / (1.0e-15 + 1.7993e-319 / (1.0e-15 + (-1.7975e-316) + (var_15 / (1.0e-15 + (var_16 * (var_17 + (1.2728e14 / (1.0e-15 + var_18))))))));
}