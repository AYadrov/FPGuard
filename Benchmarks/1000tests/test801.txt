INPUTS {
	var_1 fl32 : (-1.0, 1.0);
	var_2 fl32 : (-1.0, 1.0);
	var_3 fl32 : (-1.0, 1.0);
	var_4 fl32 : (-1.0, 1.0);
	var_5 fl32 : (-1.0, 1.0);
	var_6 fl32 : (-1.0, 1.0);
	var_7 fl32 : (-1.0, 1.0);
	var_8 fl32 : (-1.0, 1.0);
	var_9 fl32 : (-1.0, 1.0);
	var_10 fl32 : (-1.0, 1.0);
	var_11 fl32 : (-1.0, 1.0);
	var_12 fl32 : (-1.0, 1.0);
	var_13 fl32 : (-1.0, 1.0);
	var_14 fl32 : (-1.0, 1.0);
	var_15 fl32 : (-1.0, 1.0);
	var_16 fl32 : (-1.0, 1.0);
	var_17 fl32 : (-1.0, 1.0);
	var_18 fl32 : (-1.0, 1.0);
	var_19 fl32 : (-1.0, 1.0);
	var_20 fl32 : (-1.0, 1.0);
	var_21 fl32 : (-1.0, 1.0);
}
OUTPUTS {
	comp_3; 
}
EXPRS {
	comp_1 rnd32 = var_1 - ((-1.0866e35) + var_2);
	tmp_10201 rnd32 = -1.3673e20;
	tmp_10202 rnd32 = (var_3 + (var_4 - (-1.0094e34) * var_5 * (1.3833e35 - 1.0505e-35 + var_6 + (0.0 / (1.0e-15 + 1.0305e36)))));
	tmp_10203 rnd32 = 0.0;
	tmp_10204 rnd32 = var_7 * (0.0 - (-1.1760e-37));
	comp_2 rnd32 = comp_1 - tmp_10204 * tmp_10203 * tmp_10202 * tmp_10201 - (var_8 - (var_9 * (var_10 / (1.0e-15 + ((-1.8759e34) * (var_11 * sqrt((0.0 - var_12 / (1.0e-15 + var_13 * var_14 * (-1.9089e35))))))))));
	tmp_10205 rnd32 = -1.2581e-35;
	tmp_10206 rnd32 = 1.3851e-35;
	comp_3 rnd32 = comp_2 - tmp_10206 * tmp_10205 * sin(1.1152e-37 - var_15 / (1.0e-15 + var_16 - var_17 / (1.0e-15 + (var_18 + (var_19 + (1.2620e-36 + (var_20 / (1.0e-15 + var_21))))))));
}