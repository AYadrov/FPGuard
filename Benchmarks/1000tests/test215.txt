INPUTS {
	var_1 fl64 : (-1.0, 1.0);
	var_2 fl64 : (-1.0, 1.0);
	var_3 fl64 : (-1.0, 1.0);
	var_4 fl64 : (-1.0, 1.0);
	var_5 fl64 : (-1.0, 1.0);
	var_6 fl64 : (-1.0, 1.0);
	var_7 fl64 : (-1.0, 1.0);
	var_8 fl64 : (-1.0, 1.0);
	var_9 fl64 : (-1.0, 1.0);
	var_10 fl64 : (-1.0, 1.0);
	var_11 fl64 : (-1.0, 1.0);
	var_12 fl64 : (-1.0, 1.0);
	var_13 fl64 : (-1.0, 1.0);
	var_14 fl64 : (-1.0, 1.0);
	var_15 fl64 : (-1.0, 1.0);
	var_16 fl64 : (-1.0, 1.0);
	var_17 fl64 : (-1.0, 1.0);
}
OUTPUTS {
	comp_5; 
}
EXPRS {
	comp_1 rnd64 = (var_1 + (var_2 / (1.0e-15 + var_3 / (1.0e-15 + (var_4 - (var_5 + var_6 / (1.0e-15 + 1.6873e305 / (1.0e-15 + var_7))))))));
	comp_2 rnd64 = comp_1 - (1.8715e-323 * var_8 / (1.0e-15 + (var_9 + (var_10 + 0.0))));
	comp_3 rnd64 = comp_2 + ((-1.5508e-315) + (1.4037e-307 + 0.0 - (-1.8873e-321) - (var_11 - (-1.6083e306) + var_12 - 1.3135e-246)));
	tmp_2643 rnd64 = 1.6462e-316 - (1.7046e305 - ((-1.1613e306) / (1.0e-15 + var_13 - 1.6325e-306 * (1.4380e-322 + var_14 + var_15))));
	tmp_2644 rnd64 = 1.1369e-306;
	comp_4 rnd64 = comp_3 * tmp_2644 * tmp_2643 / (1.0e-15 + (-1.3999e78) + (-1.4076e-320) - var_16 / (1.0e-15 + 0.0));
	comp_5 rnd64 = comp_4 + (var_17 + (-1.2805e-307));
}