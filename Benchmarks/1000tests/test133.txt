INPUTS {
	var_1 fl32 : (-1.0, 1.0);
	var_2 fl32 : (-1.0, 1.0);
	var_3 fl32 : (-1.0, 1.0);
	var_4 fl32 : (-1.0, 1.0);
	var_5 fl32 : (-1.0, 1.0);
	var_6 fl32 : (-1.0, 1.0);
	var_7 fl32 : (-1.0, 1.0);
	var_8 fl32 : (-1.0, 1.0);
	var_9 fl32 : (-1.0, 1.0);
	var_10 fl32 : (-1.0, 1.0);
	var_11 fl32 : (-1.0, 1.0);
	var_12 fl32 : (-1.0, 1.0);
	var_13 fl32 : (-1.0, 1.0);
	var_14 fl32 : (-1.0, 1.0);
	var_15 fl32 : (-1.0, 1.0);
	var_16 fl32 : (-1.0, 1.0);
	var_17 fl32 : (-1.0, 1.0);
	var_18 fl32 : (-1.0, 1.0);
	var_19 fl32 : (-1.0, 1.0);
	var_20 fl32 : (-1.0, 1.0);
	var_21 fl32 : (-1.0, 1.0);
	var_22 fl32 : (-1.0, 1.0);
	var_23 fl32 : (-1.0, 1.0);
	var_24 fl32 : (-1.0, 1.0);
	var_25 fl32 : (-1.0, 1.0);
	var_26 fl32 : (-1.0, 1.0);
	var_27 fl32 : (-1.0, 1.0);
}
OUTPUTS {
	comp_7; 
}
EXPRS {
	tmp_1650 rnd32 = -1.7274e-35;
	comp_1 rnd32 = tmp_1650 / (1.0e-15 + ((-1.9137e11) + ((-1.0274e15) / (1.0e-15 + var_1 - 0.0 * (var_2 + (-1.6201e2) + (var_3 - var_4))))));
	comp_2 rnd32 = comp_1 + ((-1.9445e-41) - var_5);
	comp_3 rnd32 = comp_2 - var_6 / (1.0e-15 + (1.7470e-2 + 1.7665e36 * (1.6266e-37 / (1.0e-15 + (var_7 - (var_8 * (1.5952e-37 / (1.0e-15 + (0.0 / (1.0e-15 + var_9))))))))));
	comp_4 rnd32 = comp_3 / (1.0e-15 + (-1.8329e-44) + (var_10 - (1.5603e-30 - (-1.4985e-37) + (0.0 / (1.0e-15 + var_11 - var_12 + 0.0 * (-1.6650e-44))))));
	tmp_1651 rnd32 = -1.0608e34;
	comp_5 rnd32 = comp_4 - tmp_1651 / (1.0e-15 + (var_13 * var_14));
	comp_6 rnd32 = comp_5 * exp((var_15 + (var_16 * var_17 + (-1.4165e11) / (1.0e-15 + var_18 + (1.9882e34 - var_19)))));
	comp_7 rnd32 = comp_6 + 1.2014e-37 - (var_20 - (var_21 - ((-1.5437e-27) + sqrt((var_22 * var_23 + (var_24 / (1.0e-15 + ((-1.5947e-36) * (var_25 - (var_26 / (1.0e-15 + (-1.1231e-42) - (1.6037e-41 * (1.4834e-35 * var_27)))))))))))));
}