INPUTS {
	var_1 fl32 : (-1.0, 1.0);
	var_2 fl32 : (-1.0, 1.0);
	var_3 fl32 : (-1.0, 1.0);
	var_4 fl32 : (-1.0, 1.0);
	var_5 fl32 : (-1.0, 1.0);
	var_6 fl32 : (-1.0, 1.0);
	var_7 fl32 : (-1.0, 1.0);
	var_8 fl32 : (-1.0, 1.0);
	var_9 fl32 : (-1.0, 1.0);
	var_10 fl32 : (-1.0, 1.0);
	var_11 fl32 : (-1.0, 1.0);
	var_12 fl32 : (-1.0, 1.0);
	var_13 fl32 : (-1.0, 1.0);
	var_14 fl32 : (-1.0, 1.0);
	var_15 fl32 : (-1.0, 1.0);
	var_16 fl32 : (-1.0, 1.0);
	var_17 fl32 : (-1.0, 1.0);
	var_18 fl32 : (-1.0, 1.0);
}
OUTPUTS {
	comp_5; 
}
EXPRS {
	comp_1 rnd32 = var_1 * (var_2 / (1.0e-15 + 1.7072e-36 + var_3 * 1.6075e-36 / (1.0e-15 + var_4 * 1.1854e34 - ((-1.5350e35) + (1.0025e-13 * var_5)))));
	comp_2 rnd32 = comp_1 * ((-1.3254e-3) / (1.0e-15 + (1.8881e21 + (-1.0726e35) + (-1.4789e-41) * var_6)));
	tmp_2707 rnd32 = 1.6392e34;
	comp_3 rnd32 = comp_2 / (1.0e-15 + tmp_2707 * (var_7 * (var_8 / (1.0e-15 + var_9 / (1.0e-15 + var_10)))));
	comp_4 rnd32 = comp_3 / (1.0e-15 + (var_11 - ((-1.3854e21) + exp((var_12 - sqrt(((-1.0476e-21) * var_13 - sqrt(var_14 * var_15 * ((-1.0810e-13) * (var_16 / (1.0e-15 + var_17)))))))))));
	tmp_2708 rnd32 = 0.0;
	tmp_2709 rnd32 = sqrt(-1.4799e-41);
	tmp_2710 rnd32 = 1.2086e-43;
	tmp_2711 rnd32 = 1.8700e26;
	comp_5 rnd32 = comp_4 - tmp_2711 / (1.0e-15 + tmp_2710 - tmp_2709 + tmp_2708 - var_18 / (1.0e-15 + ((-1.3173e-22) * ((-1.5079e-41) / (1.0e-15 + (1.5643e12 / (1.0e-15 + 1.8830e35)))))));
}