INPUTS {
	var_1 fl64 : (-1.0, 1.0);
	var_2 fl64 : (-1.0, 1.0);
	var_3 fl64 : (-1.0, 1.0);
	var_4 fl64 : (-1.0, 1.0);
	var_5 fl64 : (-1.0, 1.0);
	var_6 fl64 : (-1.0, 1.0);
	var_7 fl64 : (-1.0, 1.0);
	var_8 fl64 : (-1.0, 1.0);
	var_9 fl64 : (-1.0, 1.0);
	var_10 fl64 : (-1.0, 1.0);
	var_11 fl64 : (-1.0, 1.0);
	var_12 fl64 : (-1.0, 1.0);
	var_13 fl64 : (-1.0, 1.0);
	var_14 fl64 : (-1.0, 1.0);
	var_15 fl64 : (-1.0, 1.0);
	var_16 fl64 : (-1.0, 1.0);
	var_17 fl64 : (-1.0, 1.0);
	var_18 fl64 : (-1.0, 1.0);
	var_19 fl64 : (-1.0, 1.0);
	var_20 fl64 : (-1.0, 1.0);
	var_21 fl64 : (-1.0, 1.0);
	var_22 fl64 : (-1.0, 1.0);
	var_23 fl64 : (-1.0, 1.0);
	var_24 fl64 : (-1.0, 1.0);
	var_25 fl64 : (-1.0, 1.0);
	var_26 fl64 : (-1.0, 1.0);
	var_27 fl64 : (-1.0, 1.0);
	var_28 fl64 : (-1.0, 1.0);
	var_29 fl64 : (-1.0, 1.0);
	var_30 fl64 : (-1.0, 1.0);
	var_31 fl64 : (-1.0, 1.0);
	var_32 fl64 : (-1.0, 1.0);
	var_33 fl64 : (-1.0, 1.0);
}
OUTPUTS {
	comp_7; 
}
EXPRS {
	comp_1 rnd64 = (var_1 + ((-1.1711e-307) / (1.0e-15 + (var_2 - (0.0 + (-1.7538e-306) + ((-1.5901e93) + var_3 - (1.3456e-323 / (1.0e-15 + var_4 - var_5))))))));
	tmp_560 rnd64 = 1.8708e261;
	comp_2 rnd64 = comp_1 - tmp_560 / (1.0e-15 + 1.1356e88 - (var_6 - (var_7 + var_8 + var_9 * var_10 / (1.0e-15 + var_11 + (var_12 / (1.0e-15 + 1.0726e306 * 1.9330e-312))))));
	tmp_561 rnd64 = var_13 + var_14 - (var_15 + var_16 + (1.2597e-322 + var_17 - tan(-1.0703e306)));
	comp_3 rnd64 = comp_2 * tmp_561 / (1.0e-15 + var_18 - (1.5548e306 + (-1.7149e-307) + (var_19 + var_20 + var_21)));
	comp_4 rnd64 = comp_3 / (1.0e-15 + (0.0 / (1.0e-15 + var_22 * (1.7680e-108 - 0.0))));
	comp_5 rnd64 = comp_4 + var_23 + (-1.8438e305) + var_24 + var_25;
	comp_6 rnd64 = comp_5 / (1.0e-15 + (0.0 - (var_26 + 1.0221e-102 / (1.0e-15 + 0.0))));
	tmp_562 rnd64 = 1.0187e305 * var_27 + 1.2072e-307 - var_28 / (1.0e-15 + var_29 - (var_30 - var_31));
	comp_7 rnd64 = comp_6 * tmp_562 * 0.0 / (1.0e-15 + var_32 + var_33);
}