INPUTS {
	var_1 fl64 : (-1.0, 1.0);
	var_2 fl64 : (-1.0, 1.0);
	var_3 fl64 : (-1.0, 1.0);
	var_4 fl64 : (-1.0, 1.0);
	var_5 fl64 : (-1.0, 1.0);
	var_6 fl64 : (-1.0, 1.0);
	var_7 fl64 : (-1.0, 1.0);
	var_8 fl64 : (-1.0, 1.0);
	var_9 fl64 : (-1.0, 1.0);
	var_10 fl64 : (-1.0, 1.0);
	var_11 fl64 : (-1.0, 1.0);
	var_12 fl64 : (-1.0, 1.0);
	var_13 fl64 : (-1.0, 1.0);
	var_14 fl64 : (-1.0, 1.0);
	var_15 fl64 : (-1.0, 1.0);
	var_16 fl64 : (-1.0, 1.0);
	var_17 fl64 : (-1.0, 1.0);
	var_18 fl64 : (-1.0, 1.0);
	var_19 fl64 : (-1.0, 1.0);
	var_20 fl64 : (-1.0, 1.0);
}
OUTPUTS {
	comp_4; 
}
EXPRS {
	comp_1 rnd64 = (var_1 - (-1.5587e98) * (var_2 - 1.4100e-320));
	tmp_4061 rnd64 = (-1.1273e-306) / (1.0e-15 + tan((-1.9466e93) * (var_3 + (-1.5958e305))));
	comp_2 rnd64 = comp_1 * tmp_4061 - (1.6827e306 + ((-1.7068e238) - ((-1.2789e-306) / (1.0e-15 + var_4 - var_5 / (1.0e-15 + (1.3586e-319 * var_6 * tan(1.3204e-311 * 0.0 * var_7)))))));
	comp_3 rnd64 = comp_2 - 0.0 + (0.0 + var_8 - (var_9 + (var_10 * var_11 - (1.3434e-307 + (var_12 - 0.0 - var_13)))));
	tmp_4062 rnd64 = 1.9958e305;
	tmp_4063 rnd64 = -1.7310e-323;
	tmp_4064 rnd64 = var_14 * (1.8226e305 / (1.0e-15 + (-1.3785e-315) * var_15));
	comp_4 rnd64 = comp_3 + tmp_4064 - tmp_4063 / (1.0e-15 + tmp_4062 - (var_16 - (0.0 - (var_17 + (var_18 - exp((var_19 - ((-1.7044e-251) + (-1.9094e-306) / (1.0e-15 + 1.9889e-316 * ((-1.7958e-323) - (1.3596e306 + ((-1.0368e-317) * var_20))))))))))));
}