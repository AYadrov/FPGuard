INPUTS {
	var_1 fl64 : (-1.0, 1.0);
	var_2 fl64 : (-1.0, 1.0);
	var_3 fl64 : (-1.0, 1.0);
	var_4 fl64 : (-1.0, 1.0);
	var_5 fl64 : (-1.0, 1.0);
	var_6 fl64 : (-1.0, 1.0);
	var_7 fl64 : (-1.0, 1.0);
	var_8 fl64 : (-1.0, 1.0);
	var_9 fl64 : (-1.0, 1.0);
	var_10 fl64 : (-1.0, 1.0);
	var_11 fl64 : (-1.0, 1.0);
	var_12 fl64 : (-1.0, 1.0);
	var_13 fl64 : (-1.0, 1.0);
	var_14 fl64 : (-1.0, 1.0);
	var_15 fl64 : (-1.0, 1.0);
	var_16 fl64 : (-1.0, 1.0);
	var_17 fl64 : (-1.0, 1.0);
	var_18 fl64 : (-1.0, 1.0);
	var_19 fl64 : (-1.0, 1.0);
	var_20 fl64 : (-1.0, 1.0);
	var_21 fl64 : (-1.0, 1.0);
	var_22 fl64 : (-1.0, 1.0);
	var_23 fl64 : (-1.0, 1.0);
	var_24 fl64 : (-1.0, 1.0);
	var_25 fl64 : (-1.0, 1.0);
}
OUTPUTS {
	comp_5; 
}
EXPRS {
	comp_1 rnd64 = (-1.1362e-315) - var_1 / (1.0e-15 + (var_2 / (1.0e-15 + 1.7234e-3 / (1.0e-15 + (var_3 + cos(0.0))))));
	tmp_12805 rnd64 = var_4 + (1.3883e-1 - 1.4296e107 * (var_5 - 0.0 * var_6));
	tmp_12806 rnd64 = 0.0;
	tmp_12807 rnd64 = -1.9653e-323;
	comp_2 rnd64 = comp_1 / (1.0e-15 + tmp_12807 - tmp_12806 / (1.0e-15 + tmp_12805 - 1.9372e305 / (1.0e-15 + (-1.7536e126) - (var_7 - (var_8 / (1.0e-15 + var_9 - ((-1.7161e306) - (-1.7187e306) / (1.0e-15 + (var_10 - (var_11 - var_12))))))))));
	comp_3 rnd64 = comp_2 * var_13 / (1.0e-15 + 1.0240e-81 * var_14 + var_15 - ((-1.8259e-307) * (0.0 * var_16 / (1.0e-15 + (var_17 * (var_18 / (1.0e-15 + (-1.5627e-134))))))));
	tmp_12808 rnd64 = (1.6774e-137 / (1.0e-15 + sqrt(exp(cos((var_19 * (1.6405e274 + cos((var_20 / (1.0e-15 + (var_21 * var_22)))))))))));
	tmp_12809 rnd64 = -1.0432e306;
	comp_4 rnd64 = comp_3 * tmp_12809 - tmp_12808 - exp(var_23 - var_24);
	comp_5 rnd64 = comp_4 / (1.0e-15 + var_25 + 1.8097e-306);
}