INPUTS {
	var_1 fl64 : (-1.0, 1.0);
	var_2 fl64 : (-1.0, 1.0);
	var_3 fl64 : (-1.0, 1.0);
	var_4 fl64 : (-1.0, 1.0);
	var_5 fl64 : (-1.0, 1.0);
	var_6 fl64 : (-1.0, 1.0);
	var_7 fl64 : (-1.0, 1.0);
	var_8 fl64 : (-1.0, 1.0);
	var_9 fl64 : (-1.0, 1.0);
	var_10 fl64 : (-1.0, 1.0);
	var_11 fl64 : (-1.0, 1.0);
	var_12 fl64 : (-1.0, 1.0);
	var_13 fl64 : (-1.0, 1.0);
	var_14 fl64 : (-1.0, 1.0);
	var_15 fl64 : (-1.0, 1.0);
	var_16 fl64 : (-1.0, 1.0);
	var_17 fl64 : (-1.0, 1.0);
	var_18 fl64 : (-1.0, 1.0);
	var_19 fl64 : (-1.0, 1.0);
	var_20 fl64 : (-1.0, 1.0);
}
OUTPUTS {
	comp_5; 
}
EXPRS {
	tmp_2044 rnd64 = 0.0;
	tmp_2045 rnd64 = var_1 * var_2 * (0.0 / (1.0e-15 + (0.0 * (var_3 + (var_4 + ((-1.6100e-310) + (var_5 - (var_6 + (-1.1046e-315)))))))));
	comp_1 rnd64 = tmp_2045 / (1.0e-15 + tmp_2044 + (var_7 / (1.0e-15 + var_8 - var_9)));
	comp_2 rnd64 = comp_1 + (var_10 + var_11);
	comp_3 rnd64 = comp_2 / (1.0e-15 + (var_12 + ((-1.0772e-266) + (1.0135e306 * (0.0 * (-1.0544e305) + 1.2451e-130 - (1.1234e-312 - (1.6174e-307 - (1.3777e-289 + var_13))))))));
	tmp_2046 rnd64 = sqrt((-1.8499e222) + var_14 * (0.0 * (0.0 + 0.0 / (1.0e-15 + (-1.6415e36) / (1.0e-15 + (-1.4806e305) + var_15 / (1.0e-15 + 0.0 + var_16))))));
	tmp_2047 rnd64 = -1.6439e-185;
	comp_4 rnd64 = comp_3 - tmp_2047 + tmp_2046 + 1.1484e-317 / (1.0e-15 + (-1.6655e-314) * var_17 + 1.5192e-307 / (1.0e-15 + (var_18 + var_19)));
	tmp_2048 rnd64 = -1.8984e-306;
	comp_5 rnd64 = comp_4 + tmp_2048 + (-1.7133e-310) + ((-1.9214e-271) / (1.0e-15 + var_20 * (-1.7310e-116)));
}