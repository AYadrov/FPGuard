INPUTS {
	var_1 fl64 : (-1.0, 1.0);
	var_2 fl64 : (-1.0, 1.0);
	var_3 fl64 : (-1.0, 1.0);
	var_4 fl64 : (-1.0, 1.0);
	var_5 fl64 : (-1.0, 1.0);
	var_6 fl64 : (-1.0, 1.0);
	var_7 fl64 : (-1.0, 1.0);
	var_8 fl64 : (-1.0, 1.0);
	var_9 fl64 : (-1.0, 1.0);
	var_10 fl64 : (-1.0, 1.0);
	var_11 fl64 : (-1.0, 1.0);
	var_12 fl64 : (-1.0, 1.0);
	var_13 fl64 : (-1.0, 1.0);
	var_14 fl64 : (-1.0, 1.0);
	var_15 fl64 : (-1.0, 1.0);
	var_16 fl64 : (-1.0, 1.0);
	var_17 fl64 : (-1.0, 1.0);
	var_18 fl64 : (-1.0, 1.0);
}
OUTPUTS {
	comp_4; 
}
EXPRS {
	comp_1 rnd64 = (var_1 * var_2 / (1.0e-15 + var_3 * (1.0007e-306 / (1.0e-15 + (var_4 + 1.1438e-306 * 0.0 + 1.1647e305 + 0.0 * (-1.4990e-307))))));
	tmp_5382 rnd64 = 1.8088e306 - var_5 - (var_6 * var_7 + (var_8 + ((-1.5814e215) / (1.0e-15 + (0.0 * (-1.5882e-306) + (var_9 * var_10))))));
	comp_2 rnd64 = comp_1 / (1.0e-15 + tmp_5382 * var_11 + (var_12 - (0.0 * (var_13 + (-1.6362e17) / (1.0e-15 + var_14 + 1.9262e-307 + 1.5283e-307 * var_15 + 1.5169e-323)))));
	tmp_5383 rnd64 = -1.2288e-175;
	comp_3 rnd64 = comp_2 * tmp_5383 * var_16 - 0.0 + (0.0 - (1.6905e305 + (0.0 / (1.0e-15 + 1.2868e-306))));
	comp_4 rnd64 = comp_3 / (1.0e-15 + exp(var_17 + (-1.2961e-288) + var_18));
}