INPUTS {
	var_1 fl64 : (-1.0, 1.0);
	var_2 fl64 : (-1.0, 1.0);
	var_3 fl64 : (-1.0, 1.0);
	var_4 fl64 : (-1.0, 1.0);
	var_5 fl64 : (-1.0, 1.0);
	var_6 fl64 : (-1.0, 1.0);
	var_7 fl64 : (-1.0, 1.0);
	var_8 fl64 : (-1.0, 1.0);
	var_9 fl64 : (-1.0, 1.0);
	var_10 fl64 : (-1.0, 1.0);
	var_11 fl64 : (-1.0, 1.0);
	var_12 fl64 : (-1.0, 1.0);
	var_13 fl64 : (-1.0, 1.0);
	var_14 fl64 : (-1.0, 1.0);
	var_15 fl64 : (-1.0, 1.0);
	var_16 fl64 : (-1.0, 1.0);
	var_17 fl64 : (-1.0, 1.0);
	var_18 fl64 : (-1.0, 1.0);
	var_19 fl64 : (-1.0, 1.0);
	var_20 fl64 : (-1.0, 1.0);
	var_21 fl64 : (-1.0, 1.0);
}
OUTPUTS {
	comp_6; 
}
EXPRS {
	comp_1 rnd64 = (var_1 - (1.8697e-311 + (var_2 + (var_3 - var_4 + 0.0 * (-1.9070e-317) + 1.1076e-314 - (1.0965e258 / (1.0e-15 + var_5))))));
	tmp_5285 rnd64 = (0.0 + var_6);
	tmp_5286 rnd64 = 0.0;
	tmp_5287 rnd64 = 1.3705e-322;
	comp_2 rnd64 = comp_1 - tmp_5287 * tmp_5286 + tmp_5285 - var_7 - 1.4974e-306 * var_8 + var_9 + (1.0456e-323 * 1.4484e-318);
	comp_3 rnd64 = comp_2 / (1.0e-15 + (-1.3030e-320) * cos(sqrt(0.0)));
	tmp_5288 rnd64 = (1.8181e305 * (0.0 / (1.0e-15 + (-1.6732e-318) * var_10 + 0.0 + 0.0 - var_11 + ((-1.4673e305) * (1.4039e-314 / (1.0e-15 + var_12))))));
	comp_4 rnd64 = comp_3 + tmp_5288 / (1.0e-15 + (var_13 / (1.0e-15 + (1.2317e306 / (1.0e-15 + (-1.9776e255) / (1.0e-15 + (-1.3297e-306) + var_14))))));
	comp_5 rnd64 = comp_4 - (0.0 + (var_15 * (var_16 * 1.3519e254)));
	comp_6 rnd64 = comp_5 / (1.0e-15 + (var_17 / (1.0e-15 + (1.4630e-307 + var_18 - (1.6981e-306 - (var_19 * var_20 + 0.0 + var_21 + ((-1.6853e305) / (1.0e-15 + (-1.2301e306)))))))));
}