INPUTS {
	var_1 fl64 : (-1.0, 1.0);
	var_2 fl64 : (-1.0, 1.0);
	var_3 fl64 : (-1.0, 1.0);
	var_4 fl64 : (-1.0, 1.0);
	var_5 fl64 : (-1.0, 1.0);
	var_6 fl64 : (-1.0, 1.0);
	var_7 fl64 : (-1.0, 1.0);
	var_8 fl64 : (-1.0, 1.0);
	var_9 fl64 : (-1.0, 1.0);
	var_10 fl64 : (-1.0, 1.0);
	var_11 fl64 : (-1.0, 1.0);
	var_12 fl64 : (-1.0, 1.0);
	var_13 fl64 : (-1.0, 1.0);
	var_14 fl64 : (-1.0, 1.0);
	var_15 fl64 : (-1.0, 1.0);
	var_16 fl64 : (-1.0, 1.0);
	var_17 fl64 : (-1.0, 1.0);
	var_18 fl64 : (-1.0, 1.0);
	var_19 fl64 : (-1.0, 1.0);
	var_20 fl64 : (-1.0, 1.0);
}
OUTPUTS {
	comp_8; 
}
EXPRS {
	comp_1 rnd64 = (var_1 / (1.0e-15 + (var_2 + var_3 + (0.0 / (1.0e-15 + (var_4 * (0.0 - var_5 * 0.0)))))));
	comp_2 rnd64 = comp_1 - 1.8304e305 / (1.0e-15 + var_6 / (1.0e-15 + var_7));
	comp_3 rnd64 = comp_2 / (1.0e-15 + var_8 - (-1.7042e305) / (1.0e-15 + (var_9 - (1.1350e-307 * 1.8374e306))));
	comp_4 rnd64 = comp_3 / (1.0e-15 + sqrt((-1.6271e197) / (1.0e-15 + (var_10 / (1.0e-15 + 1.6853e306)))));
	comp_5 rnd64 = comp_4 - (1.8598e-323 / (1.0e-15 + 0.0 * (var_11 / (1.0e-15 + var_12))));
	comp_6 rnd64 = comp_5 / (1.0e-15 + (1.6744e306 / (1.0e-15 + var_13 - ((-1.2468e-321) + (-1.6575e275) * (var_14 * (-1.2156e306) * (var_15 * (var_16 + var_17)))))));
	comp_7 rnd64 = comp_6 + ((-1.7941e268) - var_18 / (1.0e-15 + (-1.4771e-307) - (var_19 / (1.0e-15 + (-1.9151e156) - (-1.4041e-307) - 0.0 * var_20))));
	tmp_2741 rnd64 = -1.6805e-306;
	comp_8 rnd64 = comp_7 / (1.0e-15 + tmp_2741 - 1.3223e306 + 1.9900e-307);
}