INPUTS {
	var_1 fl64 : (-1.0, 1.0);
	var_2 fl64 : (-1.0, 1.0);
	var_3 fl64 : (-1.0, 1.0);
	var_4 fl64 : (-1.0, 1.0);
	var_5 fl64 : (-1.0, 1.0);
	var_6 fl64 : (-1.0, 1.0);
	var_7 fl64 : (-1.0, 1.0);
	var_8 fl64 : (-1.0, 1.0);
	var_9 fl64 : (-1.0, 1.0);
	var_10 fl64 : (-1.0, 1.0);
	var_11 fl64 : (-1.0, 1.0);
	var_12 fl64 : (-1.0, 1.0);
	var_13 fl64 : (-1.0, 1.0);
	var_14 fl64 : (-1.0, 1.0);
	var_15 fl64 : (-1.0, 1.0);
	var_16 fl64 : (-1.0, 1.0);
	var_17 fl64 : (-1.0, 1.0);
	var_18 fl64 : (-1.0, 1.0);
	var_19 fl64 : (-1.0, 1.0);
	var_20 fl64 : (-1.0, 1.0);
}
OUTPUTS {
	comp_5; 
}
EXPRS {
	comp_1 rnd64 = var_1 - var_2;
	tmp_7237 rnd64 = 0.0;
	comp_2 rnd64 = comp_1 * tmp_7237 / (1.0e-15 + (var_3 * var_4 + (var_5 * 0.0)));
	tmp_7238 rnd64 = (var_6 / (1.0e-15 + var_7 / (1.0e-15 + var_8)));
	tmp_7239 rnd64 = (var_9 - var_10 - (var_11 / (1.0e-15 + (1.4693e305 * (-1.4311e-307) + (var_12 - ((-1.3767e-162) + (1.8882e-310 - (-1.1387e-307))))))));
	tmp_7240 rnd64 = 0.0;
	comp_3 rnd64 = comp_2 / (1.0e-15 + tmp_7240 - tmp_7239 - tmp_7238 + ((-1.0729e-307) * var_13 + (1.9976e164 - 1.0747e-314)));
	comp_4 rnd64 = comp_3 - var_14 + (var_15 / (1.0e-15 + var_16));
	comp_5 rnd64 = comp_4 + (1.6693e154 / (1.0e-15 + var_17 * (var_18 + sqrt(var_19 * (var_20 * (-1.3501e305))))));
}