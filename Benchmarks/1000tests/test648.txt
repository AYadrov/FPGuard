INPUTS {
	var_1 fl64 : (-1.0, 1.0);
	var_2 fl64 : (-1.0, 1.0);
	var_3 fl64 : (-1.0, 1.0);
	var_4 fl64 : (-1.0, 1.0);
	var_5 fl64 : (-1.0, 1.0);
	var_6 fl64 : (-1.0, 1.0);
	var_7 fl64 : (-1.0, 1.0);
	var_8 fl64 : (-1.0, 1.0);
	var_9 fl64 : (-1.0, 1.0);
	var_10 fl64 : (-1.0, 1.0);
	var_11 fl64 : (-1.0, 1.0);
	var_12 fl64 : (-1.0, 1.0);
	var_13 fl64 : (-1.0, 1.0);
	var_14 fl64 : (-1.0, 1.0);
	var_15 fl64 : (-1.0, 1.0);
	var_16 fl64 : (-1.0, 1.0);
	var_17 fl64 : (-1.0, 1.0);
	var_18 fl64 : (-1.0, 1.0);
	var_19 fl64 : (-1.0, 1.0);
}
OUTPUTS {
	comp_3; 
}
EXPRS {
	tmp_8310 rnd64 = 1.9442e-306;
	tmp_8311 rnd64 = ((-1.8607e-186) / (1.0e-15 + (0.0 / (1.0e-15 + var_1 / (1.0e-15 + var_2)))));
	tmp_8312 rnd64 = 1.9726e-102;
	comp_1 rnd64 = tmp_8312 * tmp_8311 / (1.0e-15 + tmp_8310 / (1.0e-15 + ((-1.2078e306) + var_3 / (1.0e-15 + (1.2036e306 + var_4 + (var_5 + (0.0 / (1.0e-15 + (var_6 - 0.0 + 1.8310e-322)))))))));
	tmp_8313 rnd64 = -1.2308e-307;
	comp_2 rnd64 = comp_1 * tmp_8313 + (0.0 / (1.0e-15 + (1.9008e-122 * (var_7 * var_8 / (1.0e-15 + var_9)))));
	tmp_8314 rnd64 = (var_10 + var_11 - var_12 + var_13 - var_14 * var_15);
	comp_3 rnd64 = comp_2 / (1.0e-15 + tmp_8314 - (1.6104e-311 / (1.0e-15 + (var_16 - ((-1.4667e-306) - (1.5281e-307 * (var_17 / (1.0e-15 + (var_18 * 0.0 / (1.0e-15 + var_19))))))))));
}