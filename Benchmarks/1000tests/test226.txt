INPUTS {
	var_1 fl32 : (-1.0, 1.0);
	var_2 fl32 : (-1.0, 1.0);
	var_3 fl32 : (-1.0, 1.0);
	var_4 fl32 : (-1.0, 1.0);
	var_5 fl32 : (-1.0, 1.0);
	var_6 fl32 : (-1.0, 1.0);
	var_7 fl32 : (-1.0, 1.0);
	var_8 fl32 : (-1.0, 1.0);
	var_9 fl32 : (-1.0, 1.0);
	var_10 fl32 : (-1.0, 1.0);
	var_11 fl32 : (-1.0, 1.0);
	var_12 fl32 : (-1.0, 1.0);
	var_13 fl32 : (-1.0, 1.0);
	var_14 fl32 : (-1.0, 1.0);
}
OUTPUTS {
	comp_5; 
}
EXPRS {
	tmp_2780 rnd32 = -1.3287e36;
	tmp_2781 rnd32 = 1.5963e36;
	comp_1 rnd32 = tmp_2781 + tmp_2780 + 0.0 * 1.3399e-35 / (1.0e-15 + ((-1.9332e35) * var_1 - (1.0860e-3 - sin((0.0 + 1.7899e-35 * (var_2 + (-1.9091e-36)))))));
	tmp_2782 rnd32 = -1.2759e36;
	tmp_2783 rnd32 = (var_3 * var_4 + (var_5 + (0.0 / (1.0e-15 + sin((-1.8547e35) - 0.0 + 1.7972e34 / (1.0e-15 + (var_6 * var_7)))))));
	comp_2 rnd32 = comp_1 + tmp_2783 * tmp_2782 * 1.8999e-42 / (1.0e-15 + 1.6146e-35 - (1.8496e34 + (var_8 + (1.3109e-37 / (1.0e-15 + var_9 * 0.0 + var_10)))));
	comp_3 rnd32 = comp_2 / (1.0e-15 + ((-1.0570e-36) - (var_11 * var_12 - 1.4679e-37 / (1.0e-15 + (-1.2094e-43) * 1.3788e-35 * exp(1.3333e-43 + cos(1.6349e11))))));
	comp_4 rnd32 = comp_3 + 1.4380e-35 / (1.0e-15 + 0.0);
	comp_5 rnd32 = comp_4 - (0.0 - var_13 + var_14);
}