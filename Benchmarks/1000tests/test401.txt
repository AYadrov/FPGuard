INPUTS {
	var_1 fl64 : (-1.0, 1.0);
	var_2 fl64 : (-1.0, 1.0);
	var_3 fl64 : (-1.0, 1.0);
	var_4 fl64 : (-1.0, 1.0);
	var_5 fl64 : (-1.0, 1.0);
	var_6 fl64 : (-1.0, 1.0);
	var_7 fl64 : (-1.0, 1.0);
	var_8 fl64 : (-1.0, 1.0);
	var_9 fl64 : (-1.0, 1.0);
	var_10 fl64 : (-1.0, 1.0);
	var_11 fl64 : (-1.0, 1.0);
	var_12 fl64 : (-1.0, 1.0);
	var_13 fl64 : (-1.0, 1.0);
	var_14 fl64 : (-1.0, 1.0);
	var_15 fl64 : (-1.0, 1.0);
	var_16 fl64 : (-1.0, 1.0);
	var_17 fl64 : (-1.0, 1.0);
	var_18 fl64 : (-1.0, 1.0);
}
OUTPUTS {
	comp_2; 
}
EXPRS {
	tmp_5062 rnd64 = -1.3206e-321;
	tmp_5063 rnd64 = (var_1 / (1.0e-15 + var_2 / (1.0e-15 + (var_3 / (1.0e-15 + var_4)))));
	tmp_5064 rnd64 = var_5 - var_6 - (1.3002e305 + (1.3070e-306 + var_7 - (var_8 * (-1.9157e-22))));
	tmp_5065 rnd64 = 0.0 + (var_9 / (1.0e-15 + ((-1.5547e-319) / (1.0e-15 + var_10 - var_11 / (1.0e-15 + exp(1.5126e305))))));
	tmp_5066 rnd64 = sin(1.9595e-248 / (1.0e-15 + (var_12 + ((-1.9500e-314) / (1.0e-15 + (var_13 + (-1.1955e305)))))));
	tmp_5067 rnd64 = -1.1362e306;
	tmp_5068 rnd64 = -1.5950e-316;
	comp_1 rnd64 = tmp_5068 / (1.0e-15 + tmp_5067 + tmp_5066 + tmp_5065 + tmp_5064 * tmp_5063 / (1.0e-15 + tmp_5062 / (1.0e-15 + (var_14 + (var_15 * (var_16 * (-1.3581e305) + (1.6364e-307 + (0.0 / (1.0e-15 + var_17 - 1.7656e-206)))))))));
	comp_2 rnd64 = comp_1 * var_18 * 1.5509e-243;
}