INPUTS {
	var_1 fl32 : (-1.0, 1.0);
	var_2 fl32 : (-1.0, 1.0);
	var_3 fl32 : (-1.0, 1.0);
	var_4 fl32 : (-1.0, 1.0);
	var_5 fl32 : (-1.0, 1.0);
	var_6 fl32 : (-1.0, 1.0);
	var_7 fl32 : (-1.0, 1.0);
	var_8 fl32 : (-1.0, 1.0);
	var_9 fl32 : (-1.0, 1.0);
	var_10 fl32 : (-1.0, 1.0);
	var_11 fl32 : (-1.0, 1.0);
	var_12 fl32 : (-1.0, 1.0);
	var_13 fl32 : (-1.0, 1.0);
	var_14 fl32 : (-1.0, 1.0);
	var_15 fl32 : (-1.0, 1.0);
	var_16 fl32 : (-1.0, 1.0);
	var_17 fl32 : (-1.0, 1.0);
	var_18 fl32 : (-1.0, 1.0);
	var_19 fl32 : (-1.0, 1.0);
	var_20 fl32 : (-1.0, 1.0);
	var_21 fl32 : (-1.0, 1.0);
}
OUTPUTS {
	comp_5; 
}
EXPRS {
	tmp_6407 rnd32 = (-1.1798e-43) * var_1 / (1.0e-15 + (-1.0027e-42));
	comp_1 rnd32 = tmp_6407 - (1.4748e-36 * var_2 * 0.0 * var_3);
	tmp_6408 rnd32 = 0.0;
	comp_2 rnd32 = comp_1 * tmp_6408 + 1.3186e-44 + (var_4 - ((-1.4561e-44) - (var_5 * (0.0 * (1.3345e-35 + var_6 - (-1.8986e14))))));
	tmp_6409 rnd32 = 1.0491e-37 / (1.0e-15 + var_7 - (var_8 * var_9 - var_10 / (1.0e-15 + ((-1.7239e35) + 0.0))));
	comp_3 rnd32 = comp_2 * tmp_6409 + tan(1.6109e0);
	tmp_6410 rnd32 = var_11 - ((-1.7469e35) * (var_12 * (-1.6868e-42) + (-1.4398e17) - var_13 - var_14 / (1.0e-15 + 1.6150e27 - 0.0 / (1.0e-15 + 1.7564e34))));
	comp_4 rnd32 = comp_3 * tmp_6410 + var_15 + (1.4009e-41 / (1.0e-15 + (-1.1622e-43) / (1.0e-15 + (-1.6783e34) + 1.0348e36 - ((-1.0986e34) / (1.0e-15 + (var_16 / (1.0e-15 + var_17 / (1.0e-15 + var_18))))))));
	tmp_6411 rnd32 = 1.6136e34;
	comp_5 rnd32 = comp_4 - tmp_6411 - var_19 - 1.1812e26 + 1.4688e-11 - var_20 * (-1.7654e-43) + 1.5374e-44 * (1.5460e35 * (1.0422e34 / (1.0e-15 + ((-1.5616e-41) * var_21))));
}