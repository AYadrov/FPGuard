INPUTS {
	var_1 fl32 : (-1.0, 1.0);
	var_2 fl32 : (-1.0, 1.0);
	var_3 fl32 : (-1.0, 1.0);
	var_4 fl32 : (-1.0, 1.0);
	var_5 fl32 : (-1.0, 1.0);
	var_6 fl32 : (-1.0, 1.0);
	var_7 fl32 : (-1.0, 1.0);
	var_8 fl32 : (-1.0, 1.0);
	var_9 fl32 : (-1.0, 1.0);
	var_10 fl32 : (-1.0, 1.0);
	var_11 fl32 : (-1.0, 1.0);
	var_12 fl32 : (-1.0, 1.0);
	var_13 fl32 : (-1.0, 1.0);
	var_14 fl32 : (-1.0, 1.0);
	var_15 fl32 : (-1.0, 1.0);
	var_16 fl32 : (-1.0, 1.0);
	var_17 fl32 : (-1.0, 1.0);
}
OUTPUTS {
	comp_4; 
}
EXPRS {
	comp_1 rnd32 = var_1 / (1.0e-15 + ((-1.1755e-9) / (1.0e-15 + var_2 - (var_3 * (var_4 - var_5 - ((-1.5354e-35) - var_6))))));
	tmp_10393 rnd32 = 1.6548e-35;
	tmp_10394 rnd32 = (var_7 / (1.0e-15 + 1.1274e-19));
	tmp_10395 rnd32 = 1.8637e35;
	tmp_10396 rnd32 = -1.0918e-35;
	comp_2 rnd32 = comp_1 + tmp_10396 * tmp_10395 / (1.0e-15 + tmp_10394 + tmp_10393 + sqrt(-1.6007e36));
	tmp_10397 rnd32 = sin(1.5646e19 - (var_8 * var_9));
	comp_3 rnd32 = comp_2 - tmp_10397 - var_10 / (1.0e-15 + (1.6246e34 - (var_11 - (1.7915e-35 + var_12))));
	tmp_10398 rnd32 = -1.7962e-28;
	comp_4 rnd32 = comp_3 + tmp_10398 / (1.0e-15 + ((-1.1165e35) / (1.0e-15 + ((-1.5970e-10) + cos(var_13 / (1.0e-15 + var_14 / (1.0e-15 + 0.0 - (0.0 * (-1.0783e-36) * (var_15 * (var_16 / (1.0e-15 + 0.0 + 1.6449e-43 * var_17)))))))))));
}