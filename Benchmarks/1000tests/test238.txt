INPUTS {
	var_1 fl64 : (-1.0, 1.0);
	var_2 fl64 : (-1.0, 1.0);
	var_3 fl64 : (-1.0, 1.0);
	var_4 fl64 : (-1.0, 1.0);
	var_5 fl64 : (-1.0, 1.0);
	var_6 fl64 : (-1.0, 1.0);
	var_7 fl64 : (-1.0, 1.0);
	var_8 fl64 : (-1.0, 1.0);
	var_9 fl64 : (-1.0, 1.0);
	var_10 fl64 : (-1.0, 1.0);
	var_11 fl64 : (-1.0, 1.0);
	var_12 fl64 : (-1.0, 1.0);
	var_13 fl64 : (-1.0, 1.0);
	var_14 fl64 : (-1.0, 1.0);
	var_15 fl64 : (-1.0, 1.0);
	var_16 fl64 : (-1.0, 1.0);
	var_17 fl64 : (-1.0, 1.0);
	var_18 fl64 : (-1.0, 1.0);
	var_19 fl64 : (-1.0, 1.0);
	var_20 fl64 : (-1.0, 1.0);
	var_21 fl64 : (-1.0, 1.0);
	var_22 fl64 : (-1.0, 1.0);
	var_23 fl64 : (-1.0, 1.0);
	var_24 fl64 : (-1.0, 1.0);
	var_25 fl64 : (-1.0, 1.0);
	var_26 fl64 : (-1.0, 1.0);
	var_27 fl64 : (-1.0, 1.0);
	var_28 fl64 : (-1.0, 1.0);
	var_29 fl64 : (-1.0, 1.0);
	var_30 fl64 : (-1.0, 1.0);
	var_31 fl64 : (-1.0, 1.0);
}
OUTPUTS {
	comp_4; 
}
EXPRS {
	comp_1 rnd64 = var_1 + var_2 + 0.0 * var_3;
	tmp_2931 rnd64 = ((-1.6500e-306) / (1.0e-15 + var_4 * 0.0 * var_5));
	tmp_2932 rnd64 = var_6 * var_7 * cos((-1.3985e-161) / (1.0e-15 + (-1.0754e-306)));
	tmp_2933 rnd64 = 0.0;
	comp_2 rnd64 = comp_1 * tmp_2933 + tmp_2932 / (1.0e-15 + tmp_2931 / (1.0e-15 + (-1.0538e-306) - (var_8 - (var_9 + (-1.5305e306)))));
	tmp_2934 rnd64 = (-1.0327e-245) * tan((var_10 * ((-1.1096e-306) - (1.5105e95 * (var_11 - 0.0 * (var_12 + (-1.5849e-321)))))));
	tmp_2935 rnd64 = (var_13 * var_14 / (1.0e-15 + (var_15 / (1.0e-15 + (1.4106e108 - var_16 * (var_17 + (var_18 * (var_19 * var_20 - var_21))))))));
	comp_3 rnd64 = comp_2 / (1.0e-15 + tmp_2935 + tmp_2934 * (0.0 * var_22 * (-1.5038e-307) / (1.0e-15 + 1.2871e306 / (1.0e-15 + (1.7538e-145 - 1.0951e297 * 0.0 - (var_23 * var_24))))));
	tmp_2936 rnd64 = 0.0;
	comp_4 rnd64 = comp_3 - tmp_2936 * var_25 - (var_26 - var_27 - (1.2618e-306 + (1.6987e-318 + (var_28 + 1.2934e-306 - var_29 * var_30 + var_31))));
}