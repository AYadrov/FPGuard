INPUTS {
	var_1 fl64 : (-1.0, 1.0);
	var_2 fl64 : (-1.0, 1.0);
	var_3 fl64 : (-1.0, 1.0);
	var_4 fl64 : (-1.0, 1.0);
	var_5 fl64 : (-1.0, 1.0);
	var_6 fl64 : (-1.0, 1.0);
	var_7 fl64 : (-1.0, 1.0);
	var_8 fl64 : (-1.0, 1.0);
	var_9 fl64 : (-1.0, 1.0);
	var_10 fl64 : (-1.0, 1.0);
	var_11 fl64 : (-1.0, 1.0);
	var_12 fl64 : (-1.0, 1.0);
	var_13 fl64 : (-1.0, 1.0);
	var_14 fl64 : (-1.0, 1.0);
	var_15 fl64 : (-1.0, 1.0);
	var_16 fl64 : (-1.0, 1.0);
	var_17 fl64 : (-1.0, 1.0);
	var_18 fl64 : (-1.0, 1.0);
	var_19 fl64 : (-1.0, 1.0);
	var_20 fl64 : (-1.0, 1.0);
	var_21 fl64 : (-1.0, 1.0);
	var_22 fl64 : (-1.0, 1.0);
	var_23 fl64 : (-1.0, 1.0);
	var_24 fl64 : (-1.0, 1.0);
	var_25 fl64 : (-1.0, 1.0);
	var_26 fl64 : (-1.0, 1.0);
	var_27 fl64 : (-1.0, 1.0);
	var_28 fl64 : (-1.0, 1.0);
	var_29 fl64 : (-1.0, 1.0);
	var_30 fl64 : (-1.0, 1.0);
}
OUTPUTS {
	comp_6; 
}
EXPRS {
	comp_1 rnd64 = 0.0 / (1.0e-15 + (var_1 - var_2 * (var_3 + (var_4 * (var_5 * (var_6 / (1.0e-15 + (var_7 + (-1.8900e305)))))))));
	comp_2 rnd64 = comp_1 - (var_8 - var_9 + (var_10 + (var_11 / (1.0e-15 + ((-1.8311e-312) - (var_12 + 1.1906e305))))));
	comp_3 rnd64 = comp_2 + (var_13 - var_14 / (1.0e-15 + (var_15 * (var_16 + (var_17 - 0.0)))));
	comp_4 rnd64 = comp_3 + var_18 + ((-1.2307e138) + (1.1803e-311 / (1.0e-15 + (var_19 - ((-1.5257e306) * (0.0 + var_20))))));
	tmp_7972 rnd64 = 0.0;
	comp_5 rnd64 = comp_4 / (1.0e-15 + tmp_7972 - var_21 - var_22 - cos(var_23 + var_24));
	comp_6 rnd64 = comp_5 + (1.3139e306 + (0.0 + (var_25 + var_26 / (1.0e-15 + ((-1.6703e-310) + (var_27 + tan(var_28 - (0.0 + (1.9944e115 / (1.0e-15 + var_29 + (-1.8641e306) - var_30))))))))));
}