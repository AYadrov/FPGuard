INPUTS {
	var_1 fl64 : (-1.0, 1.0);
	var_2 fl64 : (-1.0, 1.0);
	var_3 fl64 : (-1.0, 1.0);
	var_4 fl64 : (-1.0, 1.0);
	var_5 fl64 : (-1.0, 1.0);
	var_6 fl64 : (-1.0, 1.0);
	var_7 fl64 : (-1.0, 1.0);
	var_8 fl64 : (-1.0, 1.0);
	var_9 fl64 : (-1.0, 1.0);
	var_10 fl64 : (-1.0, 1.0);
	var_11 fl64 : (-1.0, 1.0);
	var_12 fl64 : (-1.0, 1.0);
	var_13 fl64 : (-1.0, 1.0);
	var_14 fl64 : (-1.0, 1.0);
	var_15 fl64 : (-1.0, 1.0);
	var_16 fl64 : (-1.0, 1.0);
	var_17 fl64 : (-1.0, 1.0);
	var_18 fl64 : (-1.0, 1.0);
	var_19 fl64 : (-1.0, 1.0);
	var_20 fl64 : (-1.0, 1.0);
	var_21 fl64 : (-1.0, 1.0);
	var_22 fl64 : (-1.0, 1.0);
	var_23 fl64 : (-1.0, 1.0);
	var_24 fl64 : (-1.0, 1.0);
	var_25 fl64 : (-1.0, 1.0);
	var_26 fl64 : (-1.0, 1.0);
	var_27 fl64 : (-1.0, 1.0);
	var_28 fl64 : (-1.0, 1.0);
	var_29 fl64 : (-1.0, 1.0);
}
OUTPUTS {
	comp_7; 
}
EXPRS {
	comp_1 rnd64 = var_1 - ((-1.3228e-316) - (-1.2397e-319) / (1.0e-15 + (1.1346e-315 * (var_2 / (1.0e-15 + 0.0 * (-1.6757e18) / (1.0e-15 + 1.3856e305 * (-1.9561e-322)))))));
	tmp_2261 rnd64 = tan(var_3 - (1.1958e-323 + (var_4 / (1.0e-15 + var_5))));
	tmp_2262 rnd64 = -1.3035e-306;
	comp_2 rnd64 = comp_1 - tmp_2262 * tmp_2261 / (1.0e-15 + (var_6 - (var_7 - (var_8 + var_9 + (0.0 / (1.0e-15 + (0.0 + var_10)))))));
	comp_3 rnd64 = comp_2 - var_11 / (1.0e-15 + (var_12 + (-1.6654e-307) + (-1.2785e-320) + var_13 + (-1.7327e-306)));
	comp_4 rnd64 = comp_3 + (var_14 - 0.0 - var_15 / (1.0e-15 + (var_16 - (1.9690e181 / (1.0e-15 + var_17 + 1.9063e-177 + var_18)))));
	comp_5 rnd64 = comp_4 + (var_19 / (1.0e-15 + var_20 + (0.0 / (1.0e-15 + var_21))));
	comp_6 rnd64 = comp_5 + (var_22 - (var_23 - (0.0 - var_24 * var_25 - (-1.2734e-306) + (0.0 * var_26 + var_27))));
	comp_7 rnd64 = comp_6 * (var_28 - var_29);
}