INPUTS {
	var_1 fl32 : (-1.0, 1.0);
	var_2 fl32 : (-1.0, 1.0);
	var_3 fl32 : (-1.0, 1.0);
	var_4 fl32 : (-1.0, 1.0);
	var_5 fl32 : (-1.0, 1.0);
	var_6 fl32 : (-1.0, 1.0);
	var_7 fl32 : (-1.0, 1.0);
	var_8 fl32 : (-1.0, 1.0);
	var_9 fl32 : (-1.0, 1.0);
	var_10 fl32 : (-1.0, 1.0);
	var_11 fl32 : (-1.0, 1.0);
	var_12 fl32 : (-1.0, 1.0);
	var_13 fl32 : (-1.0, 1.0);
	var_14 fl32 : (-1.0, 1.0);
	var_15 fl32 : (-1.0, 1.0);
	var_16 fl32 : (-1.0, 1.0);
	var_17 fl32 : (-1.0, 1.0);
	var_18 fl32 : (-1.0, 1.0);
	var_19 fl32 : (-1.0, 1.0);
	var_20 fl32 : (-1.0, 1.0);
}
OUTPUTS {
	comp_5; 
}
EXPRS {
	tmp_4770 rnd32 = -1.1771e-35;
	tmp_4771 rnd32 = (var_1 + var_2 + ((-1.3922e-37) / (1.0e-15 + sqrt((var_3 * (1.7661e-36 + (var_4 + ((-1.9885e-41) - (1.6156e-44 * (var_5 + var_6))))))))));
	comp_1 rnd32 = tmp_4771 + tmp_4770 / (1.0e-15 + 1.5481e-4 / (1.0e-15 + 0.0 + var_7 / (1.0e-15 + var_8)));
	comp_2 rnd32 = comp_1 - (-1.7607e-43) / (1.0e-15 + 0.0 * (1.8856e34 * var_9 + (-1.1392e-41) / (1.0e-15 + (0.0 - var_10))));
	tmp_4772 rnd32 = ((-1.0759e-41) * (-1.1989e12) / (1.0e-15 + (var_11 - (var_12 - ((-1.4867e-42) / (1.0e-15 + 1.3175e-42 * 1.7205e-44))))));
	comp_3 rnd32 = comp_2 / (1.0e-15 + tmp_4772 * (0.0 / (1.0e-15 + var_13 + (var_14 + var_15 / (1.0e-15 + (-1.4774e-37) / (1.0e-15 + 1.9540e22))))));
	comp_4 rnd32 = comp_3 / (1.0e-15 + ((-1.1460e25) - 0.0));
	tmp_4773 rnd32 = -1.7622e35;
	comp_5 rnd32 = comp_4 - tmp_4773 + (var_16 - (-1.0369e-2) / (1.0e-15 + var_17 + ((-1.3752e36) / (1.0e-15 + (var_18 * (var_19 + tan((-1.4640e-26) * ((-1.4463e-44) / (1.0e-15 + (var_20 / (1.0e-15 + 0.0 * (-1.4176e-35))))))))))));
}