INPUTS {
	var_1 fl32 : (-1.0, 1.0);
	var_2 fl32 : (-1.0, 1.0);
	var_3 fl32 : (-1.0, 1.0);
	var_4 fl32 : (-1.0, 1.0);
	var_5 fl32 : (-1.0, 1.0);
	var_6 fl32 : (-1.0, 1.0);
	var_7 fl32 : (-1.0, 1.0);
	var_8 fl32 : (-1.0, 1.0);
	var_9 fl32 : (-1.0, 1.0);
	var_10 fl32 : (-1.0, 1.0);
	var_11 fl32 : (-1.0, 1.0);
	var_12 fl32 : (-1.0, 1.0);
	var_13 fl32 : (-1.0, 1.0);
	var_14 fl32 : (-1.0, 1.0);
	var_15 fl32 : (-1.0, 1.0);
	var_16 fl32 : (-1.0, 1.0);
	var_17 fl32 : (-1.0, 1.0);
	var_18 fl32 : (-1.0, 1.0);
	var_19 fl32 : (-1.0, 1.0);
	var_20 fl32 : (-1.0, 1.0);
	var_21 fl32 : (-1.0, 1.0);
}
OUTPUTS {
	comp_5; 
}
EXPRS {
	comp_1 rnd32 = ((-1.6364e35) - exp((1.5534e34 + var_1 / (1.0e-15 + (1.2054e34 + (var_2 * (var_3 * (1.6213e36 / (1.0e-15 + (var_4 / (1.0e-15 + (-1.7588e35) * (var_5 * var_6))))))))))));
	comp_2 rnd32 = comp_1 * var_7 + (var_8 + ((-1.4198e-37) - (-1.7551e36) - 1.5376e-37 / (1.0e-15 + (var_9 - (var_10 / (1.0e-15 + (-1.4465e35) * (0.0 / (1.0e-15 + var_11))))))));
	tmp_2547 rnd32 = 1.6612e-42;
	tmp_2548 rnd32 = 1.7270e-28;
	comp_3 rnd32 = comp_2 / (1.0e-15 + tmp_2548 * tmp_2547 - var_12 - (-1.4918e9));
	comp_4 rnd32 = comp_3 * (var_13 + (0.0 + 1.5653e26 + 0.0));
	tmp_2549 rnd32 = sqrt(((-1.3602e-44) / (1.0e-15 + cos((1.1705e36 * (var_14 / (1.0e-15 + ((-1.9636e6) + (0.0 * (0.0 / (1.0e-15 + var_15 + 1.4450e-37)))))))))));
	tmp_2550 rnd32 = var_16 - ((-1.3637e-35) / (1.0e-15 + (1.8405e-37 - (var_17 * (var_18 / (1.0e-15 + ((-1.4124e-42) + (var_19 + 0.0 - 1.3631e-35))))))));
	comp_5 rnd32 = comp_4 * tmp_2550 / (1.0e-15 + tmp_2549 + var_20 - var_21);
}