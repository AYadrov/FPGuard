INPUTS {
	var_1 fl64 : (-1.0, 1.0);
	var_2 fl64 : (-1.0, 1.0);
	var_3 fl64 : (-1.0, 1.0);
	var_4 fl64 : (-1.0, 1.0);
	var_5 fl64 : (-1.0, 1.0);
	var_6 fl64 : (-1.0, 1.0);
	var_7 fl64 : (-1.0, 1.0);
	var_8 fl64 : (-1.0, 1.0);
	var_9 fl64 : (-1.0, 1.0);
	var_10 fl64 : (-1.0, 1.0);
	var_11 fl64 : (-1.0, 1.0);
	var_12 fl64 : (-1.0, 1.0);
	var_13 fl64 : (-1.0, 1.0);
	var_14 fl64 : (-1.0, 1.0);
	var_15 fl64 : (-1.0, 1.0);
	var_16 fl64 : (-1.0, 1.0);
	var_17 fl64 : (-1.0, 1.0);
	var_18 fl64 : (-1.0, 1.0);
	var_19 fl64 : (-1.0, 1.0);
	var_20 fl64 : (-1.0, 1.0);
	var_21 fl64 : (-1.0, 1.0);
	var_22 fl64 : (-1.0, 1.0);
	var_23 fl64 : (-1.0, 1.0);
}
OUTPUTS {
	comp_3; 
}
EXPRS {
	tmp_8082 rnd64 = (1.7169e-34 - (1.3683e-245 - var_1 * 1.8881e-317 / (1.0e-15 + (-1.6399e-323) + tan((-1.1639e-191) + exp(-1.9975e-306)))));
	tmp_8083 rnd64 = 1.8641e-320 + var_2;
	tmp_8084 rnd64 = var_3 * 1.4047e-314 - (1.2338e-317 / (1.0e-15 + tan((var_4 - (var_5 + var_6 - (1.8604e-306 / (1.0e-15 + (var_7 / (1.0e-15 + (var_8 / (1.0e-15 + var_9)))))))))));
	comp_1 rnd64 = tmp_8084 + tmp_8083 - tmp_8082 - (0.0 - (var_10 - (var_11 / (1.0e-15 + var_12 + 1.6984e306))));
	tmp_8085 rnd64 = (var_13 - var_14 + 1.9297e305 + var_15);
	tmp_8086 rnd64 = (var_16 + var_17);
	tmp_8087 rnd64 = -1.8771e100;
	comp_2 rnd64 = comp_1 - tmp_8087 / (1.0e-15 + tmp_8086 * tmp_8085 / (1.0e-15 + (var_18 * (var_19 + var_20))));
	comp_3 rnd64 = comp_2 - ((-1.5479e92) * ((-1.8642e-225) + (1.9172e-306 - (var_21 * var_22 + var_23))));
}