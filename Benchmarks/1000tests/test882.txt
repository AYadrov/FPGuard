INPUTS {
	var_1 fl64 : (-1.0, 1.0);
	var_2 fl64 : (-1.0, 1.0);
	var_3 fl64 : (-1.0, 1.0);
	var_4 fl64 : (-1.0, 1.0);
	var_5 fl64 : (-1.0, 1.0);
	var_6 fl64 : (-1.0, 1.0);
	var_7 fl64 : (-1.0, 1.0);
	var_8 fl64 : (-1.0, 1.0);
	var_9 fl64 : (-1.0, 1.0);
	var_10 fl64 : (-1.0, 1.0);
	var_11 fl64 : (-1.0, 1.0);
	var_12 fl64 : (-1.0, 1.0);
	var_13 fl64 : (-1.0, 1.0);
	var_14 fl64 : (-1.0, 1.0);
	var_15 fl64 : (-1.0, 1.0);
	var_16 fl64 : (-1.0, 1.0);
	var_17 fl64 : (-1.0, 1.0);
	var_18 fl64 : (-1.0, 1.0);
}
OUTPUTS {
	comp_6; 
}
EXPRS {
	comp_1 rnd64 = (0.0 + 1.9035e305 * (var_1 - exp(-1.1736e306)));
	tmp_11257 rnd64 = var_2 * (0.0 - var_3);
	comp_2 rnd64 = comp_1 / (1.0e-15 + tmp_11257 / (1.0e-15 + (1.7244e-313 / (1.0e-15 + var_4 / (1.0e-15 + 1.9586e-109 / (1.0e-15 + var_5 * 1.3567e306 - var_6 / (1.0e-15 + var_7)))))));
	tmp_11258 rnd64 = -1.8228e-306;
	comp_3 rnd64 = comp_2 - tmp_11258 / (1.0e-15 + (1.3774e-306 + (-1.1288e-307) * 1.3447e-317 * (var_8 * var_9 + (var_10 + ((-1.3949e-28) + (1.9045e-307 + var_11))))));
	tmp_11259 rnd64 = ((-1.9837e306) - (-1.6743e305) + 1.1008e37);
	tmp_11260 rnd64 = 1.3020e-321;
	comp_4 rnd64 = comp_3 / (1.0e-15 + tmp_11260 - tmp_11259 + cos(var_12 + 1.7939e-307 - 1.5624e305));
	comp_5 rnd64 = comp_4 + (var_13 - var_14 / (1.0e-15 + var_15 * var_16));
	comp_6 rnd64 = comp_5 * (-1.5382e-83) + var_17 / (1.0e-15 + ((-1.1412e2) + (1.4697e-317 * 1.1865e305 / (1.0e-15 + (1.2368e-35 / (1.0e-15 + var_18))))));
}