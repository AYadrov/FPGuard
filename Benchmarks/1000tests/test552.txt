INPUTS {
	var_1 fl64 : (-1.0, 1.0);
	var_2 fl64 : (-1.0, 1.0);
	var_3 fl64 : (-1.0, 1.0);
	var_4 fl64 : (-1.0, 1.0);
	var_5 fl64 : (-1.0, 1.0);
	var_6 fl64 : (-1.0, 1.0);
	var_7 fl64 : (-1.0, 1.0);
	var_8 fl64 : (-1.0, 1.0);
	var_9 fl64 : (-1.0, 1.0);
	var_10 fl64 : (-1.0, 1.0);
	var_11 fl64 : (-1.0, 1.0);
	var_12 fl64 : (-1.0, 1.0);
	var_13 fl64 : (-1.0, 1.0);
	var_14 fl64 : (-1.0, 1.0);
	var_15 fl64 : (-1.0, 1.0);
	var_16 fl64 : (-1.0, 1.0);
	var_17 fl64 : (-1.0, 1.0);
	var_18 fl64 : (-1.0, 1.0);
	var_19 fl64 : (-1.0, 1.0);
	var_20 fl64 : (-1.0, 1.0);
	var_21 fl64 : (-1.0, 1.0);
	var_22 fl64 : (-1.0, 1.0);
	var_23 fl64 : (-1.0, 1.0);
}
OUTPUTS {
	comp_3; 
}
EXPRS {
	tmp_7071 rnd64 = -1.7239e-313;
	tmp_7072 rnd64 = 1.2441e240;
	tmp_7073 rnd64 = (-1.8098e222) + var_1 / (1.0e-15 + 1.1369e-130);
	tmp_7074 rnd64 = -1.9388e-298;
	comp_1 rnd64 = tmp_7074 * tmp_7073 - tmp_7072 + tmp_7071 + var_2 + 1.5205e-306 - (var_3 * (var_4 + var_5 - sqrt((var_6 + (var_7 * var_8 * var_9)))));
	tmp_7075 rnd64 = -1.2324e306;
	comp_2 rnd64 = comp_1 * tmp_7075 + 0.0 + (var_10 + 0.0 + var_11 - 0.0 - (1.7378e305 + var_12 + var_13));
	tmp_7076 rnd64 = 0.0 + var_14 + var_15;
	tmp_7077 rnd64 = var_16 * ((-1.2669e-313) * 1.2956e-322);
	comp_3 rnd64 = comp_2 - tmp_7077 * tmp_7076 / (1.0e-15 + var_17 - var_18 - sin((var_19 - (var_20 + (1.8946e-311 * tan(var_21 / (1.0e-15 + 1.2489e-313 * (var_22 + var_23))))))));
}