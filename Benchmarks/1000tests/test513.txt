INPUTS {
	var_1 fl64 : (-1.0, 1.0);
	var_2 fl64 : (-1.0, 1.0);
	var_3 fl64 : (-1.0, 1.0);
	var_4 fl64 : (-1.0, 1.0);
	var_5 fl64 : (-1.0, 1.0);
	var_6 fl64 : (-1.0, 1.0);
	var_7 fl64 : (-1.0, 1.0);
	var_8 fl64 : (-1.0, 1.0);
	var_9 fl64 : (-1.0, 1.0);
	var_10 fl64 : (-1.0, 1.0);
	var_11 fl64 : (-1.0, 1.0);
	var_12 fl64 : (-1.0, 1.0);
	var_13 fl64 : (-1.0, 1.0);
	var_14 fl64 : (-1.0, 1.0);
	var_15 fl64 : (-1.0, 1.0);
	var_16 fl64 : (-1.0, 1.0);
	var_17 fl64 : (-1.0, 1.0);
	var_18 fl64 : (-1.0, 1.0);
	var_19 fl64 : (-1.0, 1.0);
	var_20 fl64 : (-1.0, 1.0);
}
OUTPUTS {
	comp_4; 
}
EXPRS {
	comp_1 rnd64 = 1.0705e306 * (0.0 * (-1.7462e100));
	tmp_6516 rnd64 = (1.7620e305 - (1.9142e297 * (-1.1434e-321) * (1.0734e305 * (-1.3601e-307) * (-1.0281e305))));
	tmp_6517 rnd64 = 1.1903e-307;
	tmp_6518 rnd64 = 0.0 - (var_1 + (1.7090e-317 / (1.0e-15 + var_2)));
	tmp_6519 rnd64 = (var_3 + (-1.1315e-318) / (1.0e-15 + (var_4 * (1.3469e-307 + (-1.3266e-307) - 1.7314e-310))));
	tmp_6520 rnd64 = (-1.4653e93) - (1.7354e-315 - sqrt(0.0 - 1.9596e305 * var_5 * var_6 + var_7));
	comp_2 rnd64 = comp_1 - tmp_6520 + tmp_6519 / (1.0e-15 + tmp_6518 + tmp_6517 / (1.0e-15 + tmp_6516 / (1.0e-15 + var_8 - ((-1.2152e-307) / (1.0e-15 + (var_9 * 0.0 + var_10 - var_11 + var_12 + var_13))))));
	tmp_6521 rnd64 = (-1.5449e305) - (1.8503e-323 * 0.0 + 0.0);
	comp_3 rnd64 = comp_2 * tmp_6521 * sin(var_14 / (1.0e-15 + (var_15 - (var_16 + (var_17 - var_18 / (1.0e-15 + (1.3912e-95 + (1.1989e306 * 0.0))))))));
	comp_4 rnd64 = comp_3 * (var_19 - var_20 + sqrt((0.0 + sin((1.2589e-313 * 1.5647e-320 * 1.8969e-313)))));
}